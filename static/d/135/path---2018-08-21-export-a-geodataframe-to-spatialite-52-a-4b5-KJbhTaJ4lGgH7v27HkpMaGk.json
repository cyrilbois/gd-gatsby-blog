{"data":{"site":{"siteMetadata":{"title":"Giacomo Debidda","author":"Giacomo Debidda"}},"markdownRemark":{"id":"273d3591-2b79-5d3c-8719-4d77fc646c50 >>> MarkdownRemark","excerpt":"I have been doing some geospatial analysis in the last few months, and since I came back from  GeoPython  in Basel (really good conference…","html":"<p>I have been doing some geospatial analysis in the last few months, and since I came back from <a href=\"http://2018.geopython.net/\">GeoPython</a> in Basel (really good conference by the way, definitely recommended) I kept playing around with several Python libraries.</p>\n<p>One of my favourite talks at the conference was by <a href=\"http://all-geo.org/volcan01010/\">John A Stevenson</a>, a Scottish volcanologist.</p>\n<p>Apart from the scans of his amazing field notebooks, beautifully filled with annotations and drawings, I was impressed by his technical expertise and passion for his work.</p>\n<p>John mentioned that a common issue for researches that have to showcase their work at conferences is to deal with shapefiles. Instead of having to juggle with many different folders, files, and versions, he suggested to use a portable geospatial database. He mentioned two software solutions: <a href=\"https://cholmes.wordpress.com/2013/08/20/spatialite-and-geopackage/\">Geopackage</a> and <a href=\"https://en.wikipedia.org/wiki/SpatiaLite\">Spatialite</a>.</p>\n<p>Given that I had already <a href=\"http://www.bostongis.com/PrinterFriendly.aspx?content_name=spatialite_tut01\">heard about Spatialite</a>, I decided to try it.</p>\n<p>In a <a href=\"https://github.com/jackdbd/aree-protette\">toy project of mine</a> I used some shapefiles available on the <a href=\"http://dati.toscana.it/dataset\">Open Data portal of Tuscany</a>. I loaded the shapefiles with <a href=\"http://geopandas.org/\">GeoPandas</a>, performed some really simple geospatial analysis, and created a few maps with <a href=\"http://geoviews.org/\">GeoViews</a> and <a href=\"https://scitools.org.uk/cartopy/docs/latest/index.html\">Cartopy</a>. I decided to use Spatialite to export the geometries created by GeoPandas to a SQLite database.</p>\n<p>The <code class=\"language-text\">GeoPandas</code>’s <code class=\"language-text\">GeoDataFrame</code> class inherits from <code class=\"language-text\">Pandas</code>’s <code class=\"language-text\">DataFrame</code>, so it has a <code class=\"language-text\">to_sql()</code> method. I thought: <em>“I just have to call that method and pass the connection URI to my SQLite database, easy peasy!”</em>.</p>\n<p>Well, <a href=\"https://github.com/geopandas/geopandas/issues/595\">turns out</a> it wasn’t actually that easy… so I am writing this post to remember what I did.</p>\n<h2>Install Spatialite</h2>\n<p>Spatialite is actually a geospatial <em>extension</em> of SQLite, namely a set of functions that allow to store geospatial data in a SQLite database.</p>\n<p>If you are on a Ubuntu-based distro, you can install Spatialite with:</p>\n<div class='monokai'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--shell\"><span>sudo&nbsp;apt-get&nbsp;update</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--shell\"><span>sudo&nbsp;apt-get&nbsp;install&nbsp;spatialite-bin</span></span></div></pre></div>\n<h2>Check your geometries</h2>\n<p>Check the geometry type of each row in the <code class=\"language-text\">GeoDataFrame</code>. In my case, all geometries were of type <code class=\"language-text\">Polygon</code>. I think that if you have mixed geometry types (e.g. <code class=\"language-text\">Polygon</code> and <code class=\"language-text\">MultiPolygon</code>) you have to use shapely methods (via GeoPandas) to convert them. Or maybe use different columns for different geometries that you want to store in the database.</p>\n<div class='monokai'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--comment syntax--line syntax--number-sign syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--python\"><span>#</span></span><span>&nbsp;gdf&nbsp;is&nbsp;a&nbsp;GeoPandas&nbsp;DataFrame</span><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--keyword syntax--other syntax--python\"><span>print</span></span><span>(</span><span>gdf</span><span>.</span><span>geometry</span><span>.</span><span>type</span><span>)</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--python\"><span>&gt;</span><span>&gt;</span><span>&gt;</span></span><span>&nbsp;</span><span>Polygon</span></span></div></pre></div>\n<h2>Create a database table with no geospatial datatypes</h2>\n<p>Even if you cannot use <code class=\"language-text\">gdf.to_sql()</code> if you have some geospatial data, it’s fine if your <code class=\"language-text\">GeoDataFrame</code> <strong>doesn’t actually contain geospatial data</strong> (so it’s basically just like any other Pandas <code class=\"language-text\">DataFrame</code>).</p>\n<p>Connect to your SQLite database and create a new table.</p>\n<div class='monokai'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--keyword syntax--control syntax--import syntax--python\"><span>import</span></span><span>&nbsp;</span><span>os</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--keyword syntax--control syntax--import syntax--python\"><span>import</span></span><span>&nbsp;</span><span>sqlite3</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>DB_PATH</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--python\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span>os</span><span>.</span><span>path</span><span>.</span><span>join</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--python\"><span>os</span><span>.</span><span>getcwd</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span><span>,&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--single-line syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--python\"><span>&#39;</span></span><span>your-database.db</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--python\"><span>&#39;</span></span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--comment syntax--line syntax--number-sign syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--python\"><span>#</span></span><span>&nbsp;Drop&nbsp;all&nbsp;geospatial&nbsp;data</span><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>df</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--python\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span>gdf</span><span>.</span><span>drop</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span class=\"syntax--meta syntax--structure syntax--list syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--list syntax--begin syntax--python\"><span>[</span></span><span class=\"syntax--meta syntax--structure syntax--list syntax--item syntax--python\"><span class=\"syntax--string syntax--quoted syntax--single syntax--single-line syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--python\"><span>&#39;</span></span><span>geometry</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--python\"><span>&#39;</span></span></span></span><span class=\"syntax--punctuation syntax--separator syntax--list syntax--python\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--structure syntax--list syntax--item syntax--python\"><span class=\"syntax--string syntax--quoted syntax--single syntax--single-line syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--python\"><span>&#39;</span></span><span>AREA</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--python\"><span>&#39;</span></span></span></span><span class=\"syntax--punctuation syntax--separator syntax--list syntax--python\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--structure syntax--list syntax--item syntax--python\"><span class=\"syntax--string syntax--quoted syntax--single syntax--single-line syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--python\"><span>&#39;</span></span><span>PERIMETER</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--python\"><span>&#39;</span></span></span></span><span class=\"syntax--punctuation syntax--definition syntax--list syntax--end syntax--python\"><span>]</span></span></span><span>,&nbsp;</span><span class=\"syntax--variable syntax--parameter syntax--function syntax--python\"><span>axis</span></span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--python\"><span>=</span></span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>1</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--comment syntax--line syntax--number-sign syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--python\"><span>#</span></span><span>&nbsp;Create&nbsp;the&nbsp;table&nbsp;and&nbsp;populate&nbsp;it&nbsp;with&nbsp;non-geospatial&nbsp;datatypes</span><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--keyword syntax--control syntax--statement syntax--python\"><span>with</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span>sqlite3</span><span>.</span><span>connect</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>DB_PATH</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--other syntax--python\"><span>as</span></span><span>&nbsp;</span><span>conn</span><span>:</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span>df</span><span>.</span><span>to_sql</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span class=\"syntax--string syntax--quoted syntax--single syntax--single-line syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--python\"><span>&#39;</span></span><span>your_table_name</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--python\"><span>&#39;</span></span></span><span>,&nbsp;</span><span>conn</span><span>,&nbsp;</span><span class=\"syntax--variable syntax--parameter syntax--function syntax--python\"><span>if_exists</span></span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--python\"><span>=</span></span><span class=\"syntax--string syntax--quoted syntax--single syntax--single-line syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--python\"><span>&#39;</span></span><span>replace</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--python\"><span>&#39;</span></span></span><span class=\"syntax--punctuation syntax--separator syntax--parameters syntax--python\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--parameter syntax--function syntax--python\"><span>index</span></span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--python\"><span>=</span></span><span class=\"syntax--constant syntax--language syntax--python\"><span>False</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div></pre></div>\n<p>Note: This is like any other “standard” export from a pandas DataFrame into a SQLite database table. There is no Spatialite functionality involved here. Not yet.</p>\n<h2>Add a new column to store the geometry</h2>\n<p>Now that you have your table, you can use the Spatialite extension to add a new table column to store your geometry (i.e. your geospatial data.</p>\n<p>You might wonder: <em>why do I have to add this column now? Couldn’t I have added the column when I created the table?</em></p>\n<p>According to the <a href=\"http://www.gaia-gis.it/gaia-sins/spatialite-cookbook/html/new-geom.html\">Spatialite documentation</a>, you always must <em>first create the table</em>, then add the Geometry-column in a <em>second time and as a separate step</em>.</p>\n<p>Another thing you have to is to load the Spatialite extension and to initialize your spatial metadata.</p>\n<p>Let’s say that your geometry is a <code class=\"language-text\">Polygon</code>, you want to use <a href=\"https://epsg.io/3857\">EPSG:3857</a> as a projected coordinate system, and you want to name your column <code class=\"language-text\">wkb_geometry</code> (see next step why this name). This is what you have to do:</p>\n<div class='monokai'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--keyword syntax--control syntax--statement syntax--python\"><span>with</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span>sqlite3</span><span>.</span><span>connect</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>DB_PATH</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--other syntax--python\"><span>as</span></span><span>&nbsp;</span><span>conn</span><span>:</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span>conn</span><span>.</span><span>enable_load_extension</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span class=\"syntax--constant syntax--language syntax--python\"><span>True</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span>conn</span><span>.</span><span>load_extension</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span class=\"syntax--string syntax--quoted syntax--double syntax--single-line syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--python\"><span>&quot;</span></span><span>mod_spatialite</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--python\"><span>&quot;</span></span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span>conn</span><span>.</span><span>execute</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span class=\"syntax--string syntax--quoted syntax--double syntax--single-line syntax--sql syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--python\"><span>&quot;</span></span><span class=\"syntax--keyword syntax--other syntax--DML syntax--sql\"><span>SELECT</span></span><span>&nbsp;InitSpatialMetaData(</span><span class=\"syntax--constant syntax--numeric syntax--sql\"><span>1</span></span><span>);</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--python\"><span>&quot;</span></span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span>conn</span><span>.</span><span>execute</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--double syntax--block syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--python\"><span>&quot;&quot;&quot;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span class=\"syntax--string syntax--quoted syntax--double syntax--block syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SELECT&nbsp;AddGeometryColumn(&#39;your_table_name&#39;,&nbsp;&#39;wkb_geometry&#39;,&nbsp;3857,&nbsp;&#39;POLYGON&#39;,&nbsp;2);</span></span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span class=\"syntax--string syntax--quoted syntax--double syntax--block syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--python\"><span>&quot;&quot;&quot;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div></pre></div>\n<p>So, to recap:</p>\n<ul>\n<li><code class=\"language-text\">InitSpatialMetaData()</code> and <code class=\"language-text\">AddGeometryColumn()</code> are functions from Spatialite, so you have to load it as a SQLite extension.</li>\n<li><code class=\"language-text\">InitSpatialMetaData()</code> must be called before attempting to call any other Spatial SQL function.</li>\n<li>You just need to call <code class=\"language-text\">InitSpatialMetaData()</code> once; calling it multiple times is useless but completely harmless.</li>\n<li>First create the table, then add the Geometry-column as a separate step.</li>\n</ul>\n<h2>Convert each shapely geometry into a WKB representation</h2>\n<p>SQLite 3 supports only a few <a href=\"https://www.sqlite.org/datatype3.html\">storage classes (i.e. datatypes)</a>. You need to store your geospatial data as <a href=\"https://en.wikipedia.org/wiki/Binary_large_object\">BLOB</a>.</p>\n<p>GeoPandas stores geospatial data as shapely geometries, so you have to convert them somehow. Thanks to <a href=\"https://gis.stackexchange.com/a/141854/119309\">this answer on GIS Stack Exchange</a> I found that the <code class=\"language-text\">shapely.wkb</code> module provides <code class=\"language-text\">dumps()</code> and <code class=\"language-text\">loads()</code> functions that work almost exactly as their <code class=\"language-text\">pickle</code> and <code class=\"language-text\">simplejson</code> module counterparts. See <a href=\"http://toblerity.org/shapely/manual.html#well-known-formats\">here</a> for details.</p>\n<p>Each geometry in a GeoPandas <code class=\"language-text\">GeoDataFrame</code> is a <code class=\"language-text\">GeoSeries</code>. A <code class=\"language-text\">GeoSeries</code> is basically a shapely geometry with some additional properties. This means that you can convert a geometry into a binary string with something like this:</p>\n<div class='monokai'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>wkb</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--python\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span>swkb</span><span>.</span><span>dumps</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span class=\"syntax--meta syntax--item-access syntax--python\"><span>gdf</span><span>.</span><span>geometry</span><span>.</span><span>iloc</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>[</span></span><span class=\"syntax--meta syntax--item-access syntax--arguments syntax--python\"><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>0</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>]</span></span></span></span></span></span></div></pre></div>\n<p>Since the database column is already there (until now it’s filled with <code class=\"language-text\">NULL</code>), you have to use a SQL <code class=\"language-text\">UPDATE SET</code> statement.</p>\n<p>I wanted to use <code class=\"language-text\">executemany</code> to perform a batch update, but in order to do that I also needed a <code class=\"language-text\">WHERE</code> clause and an identifier to understand which table cell to update.</p>\n<p>When you use <code class=\"language-text\">executemany</code> you have to pass a tuple of tuples as a query parameter, so I prepared my data like this:</p>\n<div class='monokai'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--keyword syntax--control syntax--import syntax--python\"><span>import</span></span><span>&nbsp;</span><span>shapely</span><span>.</span><span>wkb</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--other syntax--python\"><span>as</span></span><span>&nbsp;</span><span>swkb</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>records</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--python\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--structure syntax--list syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--list syntax--begin syntax--python\"><span>[</span></span><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--structure syntax--list syntax--python\"><span class=\"syntax--meta syntax--structure syntax--list syntax--item syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--structure syntax--dictionary syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--dictionary syntax--begin syntax--python\"><span>{</span></span><span class=\"syntax--meta syntax--structure syntax--dictionary syntax--key syntax--python\"><span class=\"syntax--string syntax--quoted syntax--single syntax--single-line syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--python\"><span>&#39;</span></span><span>some_id</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--python\"><span>&#39;</span></span></span></span><span class=\"syntax--punctuation syntax--separator syntax--valuepair syntax--dictionary syntax--python\"><span>:</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--structure syntax--dictionary syntax--value syntax--python\"><span class=\"syntax--meta syntax--item-access syntax--python\"><span>gdf</span><span>.</span><span>some_id</span><span>.</span><span>iloc</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>[</span></span><span class=\"syntax--meta syntax--item-access syntax--arguments syntax--python\"><span>i</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>]</span></span></span></span><span class=\"syntax--punctuation syntax--separator syntax--dictionary syntax--python\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--structure syntax--dictionary syntax--key syntax--python\"><span class=\"syntax--string syntax--quoted syntax--single syntax--single-line syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--python\"><span>&#39;</span></span><span>wkb</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--python\"><span>&#39;</span></span></span></span><span class=\"syntax--punctuation syntax--separator syntax--valuepair syntax--dictionary syntax--python\"><span>:</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--structure syntax--dictionary syntax--value syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--python\"><span>swkb</span><span>.</span><span>dumps</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span class=\"syntax--meta syntax--item-access syntax--python\"><span>gdf</span><span>.</span><span>geometry</span><span>.</span><span>iloc</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>[</span></span><span class=\"syntax--meta syntax--item-access syntax--arguments syntax--python\"><span>i</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>]</span></span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span><span class=\"syntax--punctuation syntax--definition syntax--dictionary syntax--end syntax--python\"><span>}</span></span></span><span>&nbsp;&nbsp;</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--structure syntax--list syntax--python\"><span class=\"syntax--meta syntax--structure syntax--list syntax--item syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--repeat syntax--python\"><span>for</span></span><span>&nbsp;</span><span>i</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--logical syntax--python\"><span>in</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span class=\"syntax--support syntax--function syntax--builtin syntax--python\"><span>range</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span class=\"syntax--meta syntax--item-access syntax--python\"><span>gdf</span><span>.</span><span>shape</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>[</span></span><span class=\"syntax--meta syntax--item-access syntax--arguments syntax--python\"><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>0</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>]</span></span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--structure syntax--list syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--list syntax--end syntax--python\"><span>]</span></span></span></span></div></pre></div>\n<p>As you can see, each shapely geometry has been converted into its own Well Known Binary representation.</p>\n<div class='monokai'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--keyword syntax--other syntax--python\"><span>print</span></span><span>(</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span class=\"syntax--support syntax--function syntax--builtin syntax--python\"><span>type</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span class=\"syntax--meta syntax--item-access syntax--python\"><span>gdf</span><span>.</span><span>geometry</span><span>.</span><span>iloc</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>[</span></span><span class=\"syntax--meta syntax--item-access syntax--arguments syntax--python\"><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>0</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>]</span></span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span><span>)</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--python\"><span>&gt;</span><span>&gt;</span><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--python\"><span>&lt;</span></span><span class=\"syntax--storage syntax--type syntax--class syntax--python\"><span>class</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--single-line syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--python\"><span>&#39;</span></span><span>shapely.geometry.polygon.Polygon</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--python\"><span>&#39;</span></span></span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--python\"><span>&gt;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--keyword syntax--other syntax--python\"><span>print</span></span><span>(</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span class=\"syntax--support syntax--function syntax--builtin syntax--python\"><span>type</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span class=\"syntax--meta syntax--item-access syntax--python\"><span>records</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>[</span></span><span class=\"syntax--meta syntax--item-access syntax--arguments syntax--python\"><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>0</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>]</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>[</span></span><span class=\"syntax--meta syntax--item-access syntax--arguments syntax--python\"><span class=\"syntax--string syntax--quoted syntax--single syntax--single-line syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--python\"><span>&#39;</span></span><span>wkb</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--python\"><span>&#39;</span></span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>]</span></span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span><span>)</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--python\"><span>&gt;</span><span>&gt;</span><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--python\"><span>&lt;</span></span><span class=\"syntax--storage syntax--type syntax--class syntax--python\"><span>class</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--single-line syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--python\"><span>&#39;</span></span><span>bytes</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--python\"><span>&#39;</span></span></span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--python\"><span>&gt;</span></span></span></div></pre></div>\n<h2>Populate the column with binary data</h2>\n<p>One last step before populating the table is to create the tuple of tuples to use as a query parameter (because I’m doing a batch update with <code class=\"language-text\">executemany</code>).</p>\n<div class='monokai'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>tuples</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--python\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span class=\"syntax--support syntax--type syntax--python\"><span>tuple</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>(</span><span class=\"syntax--meta syntax--item-access syntax--python\"><span>d</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>[</span></span><span class=\"syntax--meta syntax--item-access syntax--arguments syntax--python\"><span class=\"syntax--string syntax--quoted syntax--single syntax--single-line syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--python\"><span>&#39;</span></span><span>wkb</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--python\"><span>&#39;</span></span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>]</span></span></span><span>,&nbsp;</span><span class=\"syntax--meta syntax--item-access syntax--python\"><span>d</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>[</span></span><span class=\"syntax--meta syntax--item-access syntax--arguments syntax--python\"><span class=\"syntax--string syntax--quoted syntax--single syntax--single-line syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--python\"><span>&#39;</span></span><span>some_id</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--python\"><span>&#39;</span></span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>]</span></span></span><span>)</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--repeat syntax--python\"><span>for</span></span><span>&nbsp;</span><span>d</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--logical syntax--python\"><span>in</span></span><span>&nbsp;</span><span>records</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div></pre></div>\n<p>Finally, the batch update query:</p>\n<div class='monokai'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--keyword syntax--control syntax--statement syntax--python\"><span>with</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span>sqlite3</span><span>.</span><span>connect</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>DB_PATH</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--other syntax--python\"><span>as</span></span><span>&nbsp;</span><span>conn</span><span>:</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span>conn</span><span>.</span><span>enable_load_extension</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span class=\"syntax--constant syntax--language syntax--python\"><span>True</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span>conn</span><span>.</span><span>load_extension</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span class=\"syntax--string syntax--quoted syntax--double syntax--single-line syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--python\"><span>&quot;</span></span><span>mod_spatialite</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--python\"><span>&quot;</span></span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span>conn</span><span>.</span><span>executemany</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--double syntax--block syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--python\"><span>&quot;&quot;&quot;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span class=\"syntax--string syntax--quoted syntax--double syntax--block syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UPDATE&nbsp;your_table_name</span></span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span class=\"syntax--string syntax--quoted syntax--double syntax--block syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SET&nbsp;wkb_geometry=GeomFromWKB(?,&nbsp;3857)</span></span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span class=\"syntax--string syntax--quoted syntax--double syntax--block syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WHERE&nbsp;your_table_name.some_id&nbsp;=&nbsp;?</span></span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span class=\"syntax--string syntax--quoted syntax--double syntax--block syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--python\"><span>&quot;&quot;&quot;</span></span></span><span>,&nbsp;</span><span>(</span><span>tuples</span><span>)</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div></pre></div>\n<h2>Double check that it worked</h2>\n<p>There are several ways to double check that the database contains the right geospatial data.</p>\n<p>You can perform a simple query:</p>\n<div class='monokai'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--keyword syntax--control syntax--statement syntax--python\"><span>with</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span>sqlite3</span><span>.</span><span>connect</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>DB_PATH</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--other syntax--python\"><span>as</span></span><span>&nbsp;</span><span>conn</span><span>:</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span>conn</span><span>.</span><span>enable_load_extension</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span class=\"syntax--constant syntax--language syntax--python\"><span>True</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span>conn</span><span>.</span><span>load_extension</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span class=\"syntax--string syntax--quoted syntax--double syntax--single-line syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--python\"><span>&quot;</span></span><span>mod_spatialite</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--python\"><span>&quot;</span></span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>cur</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--python\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span>conn</span><span>.</span><span>execute</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--double syntax--block syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--python\"><span>&quot;&quot;&quot;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span class=\"syntax--string syntax--quoted syntax--double syntax--block syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SELECT&nbsp;wkb_geometry&nbsp;FROM&nbsp;your_table_name</span></span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span class=\"syntax--string syntax--quoted syntax--double syntax--block syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--python\"><span>&quot;&quot;&quot;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>results</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--python\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span>cur</span><span>.</span><span>fetchall</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--keyword syntax--other syntax--python\"><span>print</span></span><span>(</span><span>results</span><span>)</span></span></div></pre></div>\n<p>or you can use a Spatialite viewer like <a href=\"https://www.gaia-gis.it/fossil/spatialite_gui/index\">Spatialite GUI</a> and use its <em>Map Preview</em> feature.</p>\n<p><img src=\"./spatialite-gui.png\" alt=\"Map Preview in Spatialite GUI\" title=\"Map Preview in Spatialite GUI\"></p>\n<h2>Reference</h2>\n<p><a href=\"https://github.com/jackdbd/aree-protette/blob/master/aree-protette.ipynb\">Jupyter notebook</a> where I used Spatialite.</p>\n<h2>Extra</h2>\n<p><a href=\"https://twitter.com/jorisvdbossche\">Joris Van den Bossche</a> and <a href=\"https://twitter.com/levijohnwolf\">Levi John Wolf</a> also gave two excellent talks about GeoPandas, PySal, and geospatial analysis. Be sure to check out their tutorials <a href=\"https://github.com/jorisvandenbossche/geopandas-tutorial\">here</a> and <a href=\"https://github.com/ljwolf/geopython\">here</a>. The best thing is that you can run their notebooks with <a href=\"https://mybinder.org/\">binder</a> without having to install anything on your machine!</p>","frontmatter":{"title":"Export a GeoDataFrame to Spatialite","date":"August 21, 2018"}}},"pageContext":{"slug":"/2018-08-21-export-a-geodataframe-to-spatialite/","previous":{"fields":{"slug":"/2018-01-07-jupyter-notebook-on-hdf5-h5py-pytables-datashader/"},"frontmatter":{"title":"Jupyter notebook on HDF5, h5py, PyTables, Datashader"}},"next":{"fields":{"slug":"/2018-08-22-12-years-of-fires-in-sardinia/"},"frontmatter":{"title":"12 Years of Fires in Sardinia"}}}}