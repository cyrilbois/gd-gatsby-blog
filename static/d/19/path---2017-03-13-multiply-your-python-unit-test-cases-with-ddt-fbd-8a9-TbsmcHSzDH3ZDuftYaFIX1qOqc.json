{"data":{"site":{"siteMetadata":{"title":"Giacomo Debidda","author":"Giacomo Debidda"}},"markdownRemark":{"id":"44fe9b16-45c3-5278-8f7d-785c19127c37 >>> MarkdownRemark","excerpt":"DDT (Data-Driven Tests) is a small python module that allows you to multiply your unit test cases for free.\nThe idea is pretty simple: you…","html":"<p>DDT (Data-Driven Tests) is a small python module that allows you to multiply your unit test cases for free.\nThe idea is pretty simple: you write a single test case and define some data samples, and DDT will generate a test case for each sample you provided.</p>\n<p>You might ask: <em>“Why is that useful?”</em></p>\n<p>Consider the following example, a simple test case without using DDT.</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--keyword syntax--control syntax--import syntax--python\"><span>import</span></span><span>&nbsp;</span><span>unittest</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--class syntax--python\"><span class=\"syntax--storage syntax--type syntax--class syntax--python\"><span>class</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--type syntax--class syntax--python\"><span>TestWithoutDDT</span></span><span class=\"syntax--punctuation syntax--definition syntax--inheritance syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--class syntax--inheritance syntax--python\"><span class=\"syntax--entity syntax--other syntax--inherited-class syntax--python\"><span>unittest</span><span>.</span><span>TestCase</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--inheritance syntax--end syntax--python\"><span>)</span></span><span class=\"syntax--punctuation syntax--section syntax--class syntax--begin syntax--python\"><span>:</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--storage syntax--type syntax--function syntax--python\"><span>def</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--python\"><span>test_without_ddt</span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function syntax--parameters syntax--python\"><span class=\"syntax--variable syntax--parameter syntax--function syntax--python\"><span>self</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--python\"><span>)</span></span><span class=\"syntax--punctuation syntax--section syntax--function syntax--begin syntax--python\"><span>:</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--repeat syntax--python\"><span>for</span></span><span>&nbsp;</span><span>x</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--logical syntax--python\"><span>in</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--structure syntax--list syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--list syntax--begin syntax--python\"><span>[</span></span><span class=\"syntax--meta syntax--structure syntax--list syntax--item syntax--python\"><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>1</span></span></span><span class=\"syntax--punctuation syntax--separator syntax--list syntax--python\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--structure syntax--list syntax--item syntax--python\"><span class=\"syntax--keyword syntax--operator syntax--arithmetic syntax--python\"><span>-</span></span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>2</span></span></span><span class=\"syntax--punctuation syntax--separator syntax--list syntax--python\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--structure syntax--list syntax--item syntax--python\"><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>3</span></span></span><span class=\"syntax--punctuation syntax--separator syntax--list syntax--python\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--structure syntax--list syntax--item syntax--python\"><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>4</span></span></span><span class=\"syntax--punctuation syntax--separator syntax--list syntax--python\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--structure syntax--list syntax--item syntax--python\"><span class=\"syntax--keyword syntax--operator syntax--arithmetic syntax--python\"><span>-</span></span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>5</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--list syntax--end syntax--python\"><span>]</span></span></span><span>:</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span class=\"syntax--variable syntax--language syntax--python\"><span>self</span></span><span>.</span><span>assertGreater</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>x</span><span>,&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>0</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div></pre></div>\n<p>If you run this test you will get the following output:</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>Failure</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--python\"><span>Traceback</span><span>&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>most</span><span>&nbsp;</span><span>recent</span><span>&nbsp;</span><span>call</span><span>&nbsp;</span><span>last</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span><span>:</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;</span><span>File</span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--double syntax--single-line syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--python\"><span>&quot;</span></span><span>/home/jack/Repos/design-patterns/test_ddt.py</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--python\"><span>&quot;</span></span></span><span>,&nbsp;</span><span>line</span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>47</span></span><span>,&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--logical syntax--python\"><span>in</span></span><span>&nbsp;</span><span>test_without_ddt</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span class=\"syntax--variable syntax--language syntax--python\"><span>self</span></span><span>.</span><span>assertGreater</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>x</span><span>,&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>0</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--support syntax--type syntax--exception syntax--python\"><span>AssertionError</span></span><span>:&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--arithmetic syntax--python\"><span>-</span></span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>2</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--logical syntax--python\"><span>not</span></span><span>&nbsp;</span><span>greater</span><span>&nbsp;</span><span>than</span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>0</span></span></span></div></pre></div>\n<p>The test failed as soon as it asserted that <code class=\"language-text\">-2</code> is greater than <code class=\"language-text\">0</code> and then stopped. It didn’t consider <code class=\"language-text\">3</code>, <code class=\"language-text\">4</code>, or <code class=\"language-text\">-5</code>, so you don’t don’t whether the test would have passed for those inputs or not.</p>\n<p>Now take a look at a very similar test with <code class=\"language-text\">DDT</code>.</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--keyword syntax--control syntax--import syntax--python\"><span>import</span></span><span>&nbsp;</span><span>unittest</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--keyword syntax--control syntax--import syntax--from syntax--python\"><span>from</span></span><span>&nbsp;</span><span>ddt</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--import syntax--python\"><span>import</span></span><span>&nbsp;</span><span>ddt</span><span>,&nbsp;</span><span>data</span><span>,&nbsp;</span><span>idata</span><span>,&nbsp;</span><span>file_data</span><span>,&nbsp;</span><span>unpack</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function syntax--decorator syntax--python\"><span class=\"syntax--entity syntax--name syntax--function syntax--decorator syntax--python\"><span>@</span><span>ddt</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--class syntax--python\"><span class=\"syntax--storage syntax--type syntax--class syntax--python\"><span>class</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--type syntax--class syntax--python\"><span>TestDDTData</span></span><span class=\"syntax--punctuation syntax--definition syntax--inheritance syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--class syntax--inheritance syntax--python\"><span class=\"syntax--entity syntax--other syntax--inherited-class syntax--python\"><span>unittest</span><span>.</span><span>TestCase</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--inheritance syntax--end syntax--python\"><span>)</span></span><span class=\"syntax--punctuation syntax--section syntax--class syntax--begin syntax--python\"><span>:</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function syntax--decorator syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--decorator syntax--python\"><span>@</span><span>data</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function syntax--decorator syntax--arguments syntax--python\"><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>1</span></span><span>,&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--arithmetic syntax--python\"><span>-</span></span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>2</span></span><span>,&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>3</span></span><span>,&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>4</span></span><span>,&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--arithmetic syntax--python\"><span>-</span></span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>5</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--storage syntax--type syntax--function syntax--python\"><span>def</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--python\"><span>test_with_ddt_data</span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function syntax--parameters syntax--python\"><span class=\"syntax--variable syntax--parameter syntax--function syntax--python\"><span>self</span></span><span class=\"syntax--punctuation syntax--separator syntax--parameters syntax--python\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--parameter syntax--function syntax--python\"><span>x</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--python\"><span>)</span></span><span class=\"syntax--punctuation syntax--section syntax--function syntax--begin syntax--python\"><span>:</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span class=\"syntax--variable syntax--language syntax--python\"><span>self</span></span><span>.</span><span>assertGreater</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>x</span><span>,&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>0</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div></pre></div>\n<p>If you run this test you will get two distinct failures, for <code class=\"language-text\">-2</code> and <code class=\"language-text\">-5</code>.</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>Failure</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--python\"><span>Traceback</span><span>&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>most</span><span>&nbsp;</span><span>recent</span><span>&nbsp;</span><span>call</span><span>&nbsp;</span><span>last</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span><span>:</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;</span><span>File</span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--double syntax--single-line syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--python\"><span>&quot;</span></span><span>/home/jack/.virtualenvs/design-patterns/lib/python3.5/site-packages/ddt.py</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--python\"><span>&quot;</span></span></span><span>,&nbsp;</span><span>line</span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>139</span></span><span>,&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--logical syntax--python\"><span>in</span></span><span>&nbsp;</span><span>wrapper</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--statement syntax--python\"><span>return</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span>func</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span class=\"syntax--variable syntax--language syntax--python\"><span>self</span></span><span>,&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--arithmetic syntax--python\"><span>*</span></span><span>args</span><span>,&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--arithmetic syntax--python\"><span>*</span><span>*</span></span><span>kwargs</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;</span><span>File</span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--double syntax--single-line syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--python\"><span>&quot;</span></span><span>/home/jack/Repos/design-patterns/test_ddt.py</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--python\"><span>&quot;</span></span></span><span>,&nbsp;</span><span>line</span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>15</span></span><span>,&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--logical syntax--python\"><span>in</span></span><span>&nbsp;</span><span>test_with_ddt_data</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span class=\"syntax--variable syntax--language syntax--python\"><span>self</span></span><span>.</span><span>assertGreater</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>x</span><span>,&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>0</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--support syntax--type syntax--exception syntax--python\"><span>AssertionError</span></span><span>:&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--arithmetic syntax--python\"><span>-</span></span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>2</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--logical syntax--python\"><span>not</span></span><span>&nbsp;</span><span>greater</span><span>&nbsp;</span><span>than</span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>0</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>Failure</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--python\"><span>Traceback</span><span>&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>most</span><span>&nbsp;</span><span>recent</span><span>&nbsp;</span><span>call</span><span>&nbsp;</span><span>last</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span><span>:</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;</span><span>File</span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--double syntax--single-line syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--python\"><span>&quot;</span></span><span>/home/jack/.virtualenvs/design-patterns/lib/python3.5/site-packages/ddt.py</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--python\"><span>&quot;</span></span></span><span>,&nbsp;</span><span>line</span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>139</span></span><span>,&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--logical syntax--python\"><span>in</span></span><span>&nbsp;</span><span>wrapper</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--statement syntax--python\"><span>return</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span>func</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span class=\"syntax--variable syntax--language syntax--python\"><span>self</span></span><span>,&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--arithmetic syntax--python\"><span>*</span></span><span>args</span><span>,&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--arithmetic syntax--python\"><span>*</span><span>*</span></span><span>kwargs</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;</span><span>File</span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--double syntax--single-line syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--python\"><span>&quot;</span></span><span>/home/jack/Repos/design-patterns/test_ddt.py</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--python\"><span>&quot;</span></span></span><span>,&nbsp;</span><span>line</span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>15</span></span><span>,&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--logical syntax--python\"><span>in</span></span><span>&nbsp;</span><span>test_with_ddt_data</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span class=\"syntax--variable syntax--language syntax--python\"><span>self</span></span><span>.</span><span>assertGreater</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>x</span><span>,&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>0</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--support syntax--type syntax--exception syntax--python\"><span>AssertionError</span></span><span>:&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--arithmetic syntax--python\"><span>-</span></span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>5</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--logical syntax--python\"><span>not</span></span><span>&nbsp;</span><span>greater</span><span>&nbsp;</span><span>than</span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>0</span></span></span></div></pre></div>\n<p>This means that <strong>all of the inputs were tested</strong>, and two of them failed. Now you know why DDT is so cool!</p>\n<p>It takes less than 2 minutes to read the <a href=\"https://ddt.readthedocs.io/en/latest/example.html\">documentation</a>, and the examples are great!</p>\n<p>The main reason why I like DDT is that it’s very easy to use: just decorate a test class with the <code class=\"language-text\">@ddt</code> decorator, and every test case you want with one of the decorators provided by this module. Here are the decorators available:</p>\n<ul>\n<li><code class=\"language-text\">@data</code>: contains as many arguments as the values you want to feed to the test. This values can be numbers, strings, tuples, etc. In the case of tuples, a cool feature is that you can <code class=\"language-text\">@unpack</code> them.</li>\n<li><code class=\"language-text\">@file_data</code>: loads the test data from a JSON or YAML file.</li>\n<li><code class=\"language-text\">@idata</code>: generates a new data sample from a generator function you defined somewhere in the code. (At this moment this decorator is not mentioned in the documentation).</li>\n</ul>\n<p>Here is an example with a generator function and <code class=\"language-text\">@idata</code>:</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--keyword syntax--control syntax--import syntax--python\"><span>import</span></span><span>&nbsp;</span><span>unittest</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--keyword syntax--control syntax--import syntax--from syntax--python\"><span>from</span></span><span>&nbsp;</span><span>ddt</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--import syntax--python\"><span>import</span></span><span>&nbsp;</span><span>ddt</span><span>,&nbsp;</span><span>idata</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function syntax--python\"><span class=\"syntax--storage syntax--type syntax--function syntax--python\"><span>def</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--python\"><span>number_generator</span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--python\"><span>)</span></span><span class=\"syntax--punctuation syntax--section syntax--function syntax--begin syntax--python\"><span>:</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--repeat syntax--python\"><span>for</span></span><span>&nbsp;</span><span>x</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--logical syntax--python\"><span>in</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--structure syntax--list syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--list syntax--begin syntax--python\"><span>[</span></span><span class=\"syntax--meta syntax--structure syntax--list syntax--item syntax--python\"><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>1</span></span></span><span class=\"syntax--punctuation syntax--separator syntax--list syntax--python\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--structure syntax--list syntax--item syntax--python\"><span class=\"syntax--keyword syntax--operator syntax--arithmetic syntax--python\"><span>-</span></span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>2</span></span></span><span class=\"syntax--punctuation syntax--separator syntax--list syntax--python\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--structure syntax--list syntax--item syntax--python\"><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>3</span></span></span><span class=\"syntax--punctuation syntax--separator syntax--list syntax--python\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--structure syntax--list syntax--item syntax--python\"><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>4</span></span></span><span class=\"syntax--punctuation syntax--separator syntax--list syntax--python\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--structure syntax--list syntax--item syntax--python\"><span class=\"syntax--keyword syntax--operator syntax--arithmetic syntax--python\"><span>-</span></span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>5</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--list syntax--end syntax--python\"><span>]</span></span></span><span>:</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--statement syntax--python\"><span>yield</span></span><span>&nbsp;</span><span>x</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function syntax--decorator syntax--python\"><span class=\"syntax--entity syntax--name syntax--function syntax--decorator syntax--python\"><span>@</span><span>ddt</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--class syntax--python\"><span class=\"syntax--storage syntax--type syntax--class syntax--python\"><span>class</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--type syntax--class syntax--python\"><span>TestDDTGenerator</span></span><span class=\"syntax--punctuation syntax--definition syntax--inheritance syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--class syntax--inheritance syntax--python\"><span class=\"syntax--entity syntax--other syntax--inherited-class syntax--python\"><span>unittest</span><span>.</span><span>TestCase</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--inheritance syntax--end syntax--python\"><span>)</span></span><span class=\"syntax--punctuation syntax--section syntax--class syntax--begin syntax--python\"><span>:</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function syntax--decorator syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--decorator syntax--python\"><span>@</span><span>idata</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function syntax--decorator syntax--arguments syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--python\"><span>number_generator</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--storage syntax--type syntax--function syntax--python\"><span>def</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--python\"><span>test_with_ddt_idata</span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function syntax--parameters syntax--python\"><span class=\"syntax--variable syntax--parameter syntax--function syntax--python\"><span>self</span></span><span class=\"syntax--punctuation syntax--separator syntax--parameters syntax--python\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--parameter syntax--function syntax--python\"><span>x</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--python\"><span>)</span></span><span class=\"syntax--punctuation syntax--section syntax--function syntax--begin syntax--python\"><span>:</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span class=\"syntax--variable syntax--language syntax--python\"><span>self</span></span><span>.</span><span>assertGreater</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>x</span><span>,&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>0</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div></pre></div>\n<p>And here an example where the data is stored in an external file (JSON):</p>\n<p><em>mydatafile.json</em></p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--json\"><span class=\"syntax--meta syntax--structure syntax--array syntax--json\"><span class=\"syntax--punctuation syntax--definition syntax--array syntax--begin syntax--json\"><span>[</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--json\"><span class=\"syntax--meta syntax--structure syntax--array syntax--json\"><span>&nbsp;&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--json\"><span>1</span></span><span class=\"syntax--punctuation syntax--separator syntax--array syntax--json\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--json\"><span>2</span></span><span class=\"syntax--punctuation syntax--separator syntax--array syntax--json\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--json\"><span>3</span></span><span class=\"syntax--punctuation syntax--separator syntax--array syntax--json\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--json\"><span>4</span></span><span class=\"syntax--punctuation syntax--separator syntax--array syntax--json\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--json\"><span>5</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--json\"><span class=\"syntax--meta syntax--structure syntax--array syntax--json\"><span class=\"syntax--punctuation syntax--definition syntax--array syntax--end syntax--json\"><span>]</span></span></span></span></div></pre></div>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--keyword syntax--control syntax--import syntax--python\"><span>import</span></span><span>&nbsp;</span><span>unittest</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--keyword syntax--control syntax--import syntax--from syntax--python\"><span>from</span></span><span>&nbsp;</span><span>ddt</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--import syntax--python\"><span>import</span></span><span>&nbsp;</span><span>ddt</span><span>,&nbsp;</span><span>file_data</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function syntax--decorator syntax--python\"><span class=\"syntax--entity syntax--name syntax--function syntax--decorator syntax--python\"><span>@</span><span>ddt</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--class syntax--python\"><span class=\"syntax--storage syntax--type syntax--class syntax--python\"><span>class</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--type syntax--class syntax--python\"><span>TestDDTDataFile</span></span><span class=\"syntax--punctuation syntax--definition syntax--inheritance syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--class syntax--inheritance syntax--python\"><span class=\"syntax--entity syntax--other syntax--inherited-class syntax--python\"><span>unittest</span><span>.</span><span>TestCase</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--inheritance syntax--end syntax--python\"><span>)</span></span><span class=\"syntax--punctuation syntax--section syntax--class syntax--begin syntax--python\"><span>:</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function syntax--decorator syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--decorator syntax--python\"><span>@</span><span>file_data</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function syntax--decorator syntax--arguments syntax--python\"><span class=\"syntax--string syntax--quoted syntax--single syntax--single-line syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--python\"><span>&#39;</span></span><span>mydatafile.json</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--python\"><span>&#39;</span></span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--storage syntax--type syntax--function syntax--python\"><span>def</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--python\"><span>test_with_ddt_file_data</span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function syntax--parameters syntax--python\"><span class=\"syntax--variable syntax--parameter syntax--function syntax--python\"><span>self</span></span><span class=\"syntax--punctuation syntax--separator syntax--parameters syntax--python\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--parameter syntax--function syntax--python\"><span>x</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--python\"><span>)</span></span><span class=\"syntax--punctuation syntax--section syntax--function syntax--begin syntax--python\"><span>:</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span class=\"syntax--variable syntax--language syntax--python\"><span>self</span></span><span>.</span><span>assertGreater</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>x</span><span>,&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>0</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div></pre></div>\n<p>Finally, an example where the data in unpacked:</p>\n<div class='midnight'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--keyword syntax--control syntax--import syntax--python\"><span>import</span></span><span>&nbsp;</span><span>unittest</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--keyword syntax--control syntax--import syntax--from syntax--python\"><span>from</span></span><span>&nbsp;</span><span>ddt</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--import syntax--python\"><span>import</span></span><span>&nbsp;</span><span>ddt</span><span>,&nbsp;</span><span>data</span><span>,&nbsp;</span><span>unpack</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function syntax--decorator syntax--python\"><span class=\"syntax--entity syntax--name syntax--function syntax--decorator syntax--python\"><span>@</span><span>ddt</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--class syntax--python\"><span class=\"syntax--storage syntax--type syntax--class syntax--python\"><span>class</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--type syntax--class syntax--python\"><span>TestDDTDataUnpack</span></span><span class=\"syntax--punctuation syntax--definition syntax--inheritance syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--class syntax--inheritance syntax--python\"><span class=\"syntax--entity syntax--other syntax--inherited-class syntax--python\"><span>unittest</span><span>.</span><span>TestCase</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--inheritance syntax--end syntax--python\"><span>)</span></span><span class=\"syntax--punctuation syntax--section syntax--class syntax--begin syntax--python\"><span>:</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function syntax--decorator syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--decorator syntax--python\"><span>@</span><span>data</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function syntax--decorator syntax--arguments syntax--python\"><span>(</span><span class=\"syntax--string syntax--quoted syntax--single syntax--single-line syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--python\"><span>&#39;</span></span><span>hello</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--python\"><span>&#39;</span></span></span><span>,&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>3</span></span><span>)</span><span>,&nbsp;</span><span>(</span><span class=\"syntax--string syntax--quoted syntax--single syntax--single-line syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--python\"><span>&#39;</span></span><span>answer</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--python\"><span>&#39;</span></span></span><span>,&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>42</span></span><span>)</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function syntax--decorator syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--decorator syntax--python\"><span>@</span><span>unpack</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--storage syntax--type syntax--function syntax--python\"><span>def</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--python\"><span>test_with_ddt_data_unpack</span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function syntax--parameters syntax--python\"><span class=\"syntax--variable syntax--parameter syntax--function syntax--python\"><span>self</span></span><span class=\"syntax--punctuation syntax--separator syntax--parameters syntax--python\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--parameter syntax--function syntax--python\"><span>some_string</span></span><span class=\"syntax--punctuation syntax--separator syntax--parameters syntax--python\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--parameter syntax--function syntax--python\"><span>some_integer</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--python\"><span>)</span></span><span class=\"syntax--punctuation syntax--section syntax--function syntax--begin syntax--python\"><span>:</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span class=\"syntax--variable syntax--language syntax--python\"><span>self</span></span><span>.</span><span>assertIsInstance</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>some_string</span><span>,&nbsp;</span><span class=\"syntax--support syntax--type syntax--python\"><span>str</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span class=\"syntax--variable syntax--language syntax--python\"><span>self</span></span><span>.</span><span>assertIsInstance</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>some_integer</span><span>,&nbsp;</span><span class=\"syntax--support syntax--type syntax--python\"><span>int</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div></pre></div>\n<h2>Alternatives to DDT</h2>\n<p>The idea of test generators is not new, and there are at least two modules with similar capabilities: <a href=\"https://github.com/box/genty/blob/master/README.rst\">genty</a> and <a href=\"https://pypi.python.org/pypi/unittest-data-provider/1.0.0\">data-provider</a>. I opted for DDT because it seems better documented and more pythonic, but genty looks pretty good too. In particular, the <code class=\"language-text\">@genty_repeat</code> decorator might be a nice feature that is not available in DDT(even if one could probably obtain the same functionality by using the <a href=\"https://pypi.python.org/pypi/retrying\">retrying</a> module).</p>","frontmatter":{"title":"Multiply your Python Unit Test Cases with DDT","date":"March 13, 2017"}}},"pageContext":{"slug":"/2017-03-13-multiply-your-python-unit-test-cases-with-ddt/","previous":{"fields":{"slug":"/2017-03-13-factory-method-and-abstract-factory-in-python/"},"frontmatter":{"title":"Factory Method and Abstract Factory in Python"}},"next":{"fields":{"slug":"/2017-03-13-first-steps-with-postgresql/"},"frontmatter":{"title":"First steps with PostgreSQL"}}}}