{"data":{"site":{"siteMetadata":{"title":"Giacomo Debidda","author":"Giacomo Debidda","description":"Giacomo Debidda's Personal Blog"}},"markdownRemark":{"id":"a3b881ac-d744-5357-8e7b-527680a4124c","excerpt":"Project starters like  Angular starter  and  Cookiecutter-Django  are really amazing when you are experienced with the technology they use…","timeToRead":8,"html":"<p>Project starters like <a href=\"https://github.com/AngularClass/angular-starter\">Angular starter</a> and <a href=\"https://github.com/pydanny/cookiecutter-django\">Cookiecutter-Django</a> are really amazing when you are experienced with the technology they use and you want to develop applications that follow best practices and are ready for production. On the other hand, if you are just starting out, trying to wrap your head around these complex setups will be a daunting task and most likely a waste of your time. It’s fundamental to know why you need a given package in your project, and why it’s good to have your files in a given location in your project directory tree.</p>\n<p>Here I want to list all the basic requirements to get you started with a Webpack project that uses ES6, and I going to explain, very briefly, why you need each package and configuration.</p>\n<p><em>Note: If you use npm, replace all yarn commands with theit npm equivalent</em>.</p>\n<p>Here is a nice checklist:</p>\n<ol>\n<li>Think about your project</li>\n<li>ESLint</li>\n<li>The bare minimum</li>\n<li>babel-core</li>\n<li>babel-preset-es2015</li>\n<li>webpack</li>\n<li>webpack-dev-server</li>\n<li>Loaders</li>\n<li>package.json</li>\n<li>webpack.config.js</li>\n</ol>\n<hr>\n<h2>1 - Think about your project</h2>\n<p>Take some time to think about your project. Will it be a small project? A big one? Are you going to use third-party Javascript / CSS libraries? What about a CSS preprocessor like SASS? Do you need different environments (e.g. development, production, test)?</p>\n<p>The structure of your project depends on the type of application you are developing, the size of the project itself, and of course on personal preferences. You can use some common principles and general guidelines though. A popular approach is to follow <a href=\"https://12factor.net/\">the Twelve Factor App</a> (see also <a href=\"http://www.clearlytech.com/2014/01/04/12-factor-apps-plain-english/\">here</a> for an explanation easier to digest than the original one). Probably for small projects - like this one - such considerations are a bit an overkill, but I think it’s important to keep that in mind anyway.</p>\n<p>In this article we are going to create a very simple project. In the end it will look like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">.\n├── dist\n│   ├── bundle.js  # generated by webpack\n│   ├── bundle.js.map  # generated by webpack\n│   └── index.html\n├── node_modules\n├── package.json\n├── src\n│   ├── index.js\n│   └── style.css\n├── webpack.config.js\n└── yarn.lock</code></pre></div>\n<p>To get started, open a terminal and run:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">yarn init</code></pre></div>\n<p>This will create a <code class=\"language-text\">package.json</code> file containing the information about your project and its dependencies. You don’t really need to type anything, just press enter and accept the default choices.</p>\n<p><em>Note: if you created this project on GitHub and you cloned it on your machine, the yarn init wizard will fill in the correct author and url of your repository.</em></p>\n<h2>2 - ESLint</h2>\n<p>Using a linter will certainly improve the quality of the code you write, so if you don’t have it yet, I strongly suggest you to install ESLint <strong>globally</strong> with:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">yarn global add eslint</code></pre></div>\n<p>In your project folder, setup the linter with:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">eslint --init</code></pre></div>\n<p>Answer the questions on the screen. I like to use the <a href=\"https://github.com/airbnb/javascript\">AirBnB style guide</a> and to save the linter configuration file as JSON: <code class=\"language-text\">.eslintrc.json</code>.</p>\n<h2>3 - The bare minimum</h2>\n<p>You are going to need an HTML file that contains your webpack bundle, a Javascript file that represents the <em>entry point</em> of your application, and a CSS file for styling.</p>\n<p>Create an <code class=\"language-text\">index.html</code> file in your <code class=\"language-text\">dist</code> folder. As you can see, the <code class=\"language-text\">bundle.js</code> generated by webpack is included in the <code class=\"language-text\">&lt;script&gt;</code> tag. I added some Google fonts too.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>utf-8<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Getting started with Webpack and ES6<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://fonts.googleapis.com/css?family=Open+Sans|Raleway<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>Getting started with Webpack and ES6<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>./bundle.js<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Create a <code class=\"language-text\">style.css</code> file in your <code class=\"language-text\">src</code> folder. This file will be processed by the <code class=\"language-text\">css-loader</code> first, and by the <code class=\"language-text\">style-loader</code> second.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">h1</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Open Sans'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">p</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Raleway'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-style</span><span class=\"token punctuation\">:</span> italic<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Lastly, write an <code class=\"language-text\">index.js</code> in your <code class=\"language-text\">src</code> folder. This file will be the entry point for your app.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./style.css'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'Webpack'</span>\n<span class=\"token keyword\">const</span> p <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token string\">`Hello </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span>\ndocument<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span></code></pre></div>\n<h2>4 - babel-core</h2>\n<p>babel-core is the Babel compiler itself, or maybe it’s more appropriate calling it <em>transpiler</em>, because it transforms javascript code into javascript code. It can be broken down into 3 parts: a parser, a transformer and a generator. You can find more about how it works in the <a href=\"https://github.com/babel/babel\">documentation</a>. Install it with:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">yarn add --dev babel-core</code></pre></div>\n<p><em>Note: <a href=\"http://babeljs.io/docs/setup/#installation\">this page on babeljs.io</a> tells you which packages you need in order to integrate Babel with your tools of choice</em>.</p>\n<h2>5- babel-preset-es2015</h2>\n<p>As the name implies, it’s a preset that automatically determines the Babel plugins you need, based on your supported environments, so Babel can perform its syntax transformation. If you are developing a web application then you want the es2015 preset because you need to target ECMAScript 2015 (a.k.a ES6). You enter ES6 code, and thanks to all Babel plugins installed (because such plugins are required by this preset) the Babel compiler will generate code that can run in all major browsers. You can find more about this process <a href=\"http://babeljs.io/docs/plugins/preset-env/\">here</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">yarn add --dev &quot;babel-preset-es2015</code></pre></div>\n<p>You could specify the preset in a <code class=\"language-text\">.babelrc</code> file (you need to put it under version control) or in the <code class=\"language-text\">webpack.confg.js</code>. For more information about <code class=\"language-text\">babelrc</code> see <a href=\"http://babeljs.io/docs/usage/babelrc/\">here</a>.</p>\n<p><em>Note: Keep in mind that ECMAScript is a standard, and Javascript is an implementation of such standard. For a nice, short overview of major ECMAScript versions see <a href=\"https://benmccormick.org/2015/09/14/es5-es6-es2016-es-next-whats-going-on-with-javascript-versioning/\">this article</a></em>.</p>\n<h2>6 - webpack</h2>\n<p>It’s the Javascript module bundler, currently at version 2. It lets you create bundles for your application. You can have one or more bundles for all your Javascript files, and one or more bundles for your stylesheets. The number of bundles depends on your webpack configuration. Even if you are going to use Webpack in all of your projects, install it <strong>locally</strong>:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">yarn add --dev webpack</code></pre></div>\n<h2>7 - webpack-dev-server</h2>\n<p>It’s a little Node.js Express server for development. It’s really fast because it serves your bundles from the memory, and since it has <em>live reload</em> it’s also very handy to use.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">yarn add --dev webpack-dev-server</code></pre></div>\n<h2>8 - Loaders</h2>\n<p>Webpack treats every file as a <em>module</em>. Loaders convert files into modules, so you can <em>require</em> these files in your application. In order to tell Webpack which loader to use, you need to write a set of rules in your <code class=\"language-text\">webpack.config.js</code> file. For each rule you need to specify a regular expression (the <code class=\"language-text\">test</code> field) and the loader you want to use (the <code class=\"language-text\">use</code> field).</p>\n<p>You will need <code class=\"language-text\">babel-loader</code> to convert ES6 files into modules, <code class=\"language-text\">css-loader</code> to convert CSS files into modules, and <code class=\"language-text\">style-loader</code> to create a <code class=\"language-text\">&lt;style&gt;</code> node and append it in the <code class=\"language-text\">&lt;head&gt;</code> of your <code class=\"language-text\">index.html</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">yarn add --dev babel-loader style-loader css-loader</code></pre></div>\n<h2>9 - package.json</h2>\n<p>Now that all the dependencies are set, the next step is to open your <code class=\"language-text\">package.json</code> and write the commands for running the webpack dev server and build the bundle/s. These commands go to the <code class=\"language-text\">scripts</code> field in <code class=\"language-text\">package.json</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack-starter\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1.0.0\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"main\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"index.js\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"server\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack-dev-server --config webpack.config.js\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"lint\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"eslint src\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack --config webpack.config.js --progress\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"license\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"MIT\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"devDependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"babel-core\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^6.24.1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"babel-loader\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^7.0.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"babel-preset-es2015\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^6.24.1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"css-loader\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^0.28.1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"eslint\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^3.19.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"eslint-config-airbnb-base\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^11.1.3\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"eslint-plugin-import\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^2.2.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"style-loader\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^0.17.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"webpack\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^2.5.1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"webpack-dev-server\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^2.4.5\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>10 - webpack.config.js</h2>\n<p>There is only one thing left to do: writing a configuration file for Webpack. You will need to set the entry point of your application, the output of your <code class=\"language-text\">bundle.js</code>, the rules for your loaders, and the configuration for the webpack-dev-server.</p>\n<p>For this very simple project, the <code class=\"language-text\">webpack.config.js</code> will look like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  entry<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'src'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'index.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n  output<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    path<span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'dist'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    filename<span class=\"token punctuation\">:</span> <span class=\"token string\">'bundle.js'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  module<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    rules<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token comment\">// rule for .js/.jsx files</span>\n      <span class=\"token punctuation\">{</span>\n        test<span class=\"token punctuation\">:</span> <span class=\"token regex\">/\\.(js|jsx)$/</span><span class=\"token punctuation\">,</span>\n        include<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'src'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        exclude<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'node_modules'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        use<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          loader<span class=\"token punctuation\">:</span> <span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">,</span>\n          options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n            presets<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'es2015'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// rule for .css files</span>\n      <span class=\"token punctuation\">{</span>\n        test<span class=\"token punctuation\">:</span> <span class=\"token regex\">/\\.css$/</span><span class=\"token punctuation\">,</span>\n        include<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'src'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        use<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> loader<span class=\"token punctuation\">:</span> <span class=\"token string\">'style-loader'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> loader<span class=\"token punctuation\">:</span> <span class=\"token string\">'css-loader'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  devtool<span class=\"token punctuation\">:</span> <span class=\"token string\">'source-map'</span><span class=\"token punctuation\">,</span>\n\n  devServer<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    host<span class=\"token punctuation\">:</span> <span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span>\n    port<span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span><span class=\"token punctuation\">,</span>\n    contentBase<span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'dist'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    inline<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// live reloading</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><em>Note: it’s not mandatory to set</em> <code class=\"language-text\">devtool</code> <em>and generate a source map, but since it really helps when debugging your application I decided to include it in the configuration</em>.</p>\n<h2>Next steps</h2>\n<p>If you managed to run this project, congratulations! As you can see, even for a small project like this one the <code class=\"language-text\">webpack.config.js</code> file is not that small. If your application gets bigger, you might want to create multiple entry points for your app, organize your project tree in a different way (e.g. create a folder for js files, another one for css files, etc), or use some Webpack plugin.</p>\n<p>Webpack is a great tool, and has a vast ecosystem of plugins. In this article I wanted to keep things as simple as possible, so I didn’t include any, but in a real project you will likely use several plugins. If you are curious about which Webpack plugins I am currently using you may want to check <a href=\"http://giacomodebidda.com/blog/webpack-plugins-that-i-am-currently-using/\">this article</a>.</p>","frontmatter":{"title":"Getting started with Webpack and ES6","date":"May 12, 2017","tags":["Webpack","ES6"]}}},"pageContext":{"slug":"/getting-started-with-webpack-and-es6/","previous":{"fields":{"slug":"/webpack-plugins-that-i-am-currently-using/"},"timeToRead":5,"frontmatter":{"title":"Webpack plugins that I am currently using","path":"/webpack-plugins-that-i-am-currently-using/"}},"next":{"fields":{"slug":"/my-personal-git-memo/"},"timeToRead":6,"frontmatter":{"title":"My personal Git Memo","path":"/my-personal-git-memo/"}}}}