{"data":{"site":{"siteMetadata":{"title":"Giacomo Debidda","author":"Giacomo Debidda"}},"markdownRemark":{"id":"f692d452-ab67-553c-9713-c613e3a171d7 >>> MarkdownRemark","excerpt":"Some weeks ago I decided to start studying design patterns and implementing them in Python.  Design patterns  and  Head first in design…","html":"<p>Some weeks ago I decided to start studying design patterns and implementing them in Python. <em>Design patterns</em> and <em>Head first in design patterns</em> are constantly cited for being really good books. I added them to my reading list some time ago, but I still haven’t managed to read them so far. Nonetheless, I’ve read several blog posts, articles on Wikipedia and answers on Stack Overflow and started implementing some of these patterns.</p>\n<p>Here we are going to see the <em>Adapter</em> pattern.</p>\n<h2>Adapter is a structural design pattern</h2>\n<p>Structural design patterns are concerned with how classes and objects are <em>composed</em> to form larger structures. They help to use classes or methods which may not be usable directly, or they can ease the design by identifying a simple way to build relationships between entities.</p>\n<p><em>Adapter</em> allows a <em>Client</em> to access otherwise not directly accessible functionalities of a <em>Supplier</em> . Adapter makes things work after they are designed: it produces an interface for a single object or class, and <em>adapts</em> such class in a way that a <em>Client</em> can use it.</p>\n<blockquote>\n<p>You have got <em>this</em>, and you <strong>need</strong> <em>that</em>.</p>\n</blockquote>\n<h2>How do we implement the Adapter Pattern?</h2>\n<p>There are two ways of implementing the Adapter pattern:</p>\n<ol>\n<li>Object Adapter</li>\n<li>Class Adapter</li>\n</ol>\n<p>The object adapter uses <strong>encapsulation</strong>, while the class adapter uses <strong>multiple inheritance</strong> (Python supports both encapsulation and multiple inheritance).</p>\n<p>Let’s imagine that you have a smartphone (client) and you want to charge it. In order to charge a mobile phone you need a direct current (DC) and an input voltage of a few volts (from 3.7V to 5.2V I suppose), so you can’t simply plug it directly into a wall socket (supplier), which provides an alternate current (AC) and outputs either 230V (in Europe) or 120V (in the US). Namely, without a phone charger (the Adapter) you <strong>can’t</strong> charge your phone. </p>\n<p><em>In the following code I implemented both a European Socket class and and an American Socket class because they will be useful later on when explaining the Class Adapter approach. For now you can ignore the USSocket class.</em></p>\n<div class='monokai'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--comment syntax--line syntax--number-sign syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--python\"><span>#</span></span><span>&nbsp;Client</span><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--class syntax--python\"><span class=\"syntax--storage syntax--type syntax--class syntax--python\"><span>class</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--type syntax--class syntax--python\"><span>Smartphone</span></span><span class=\"syntax--punctuation syntax--definition syntax--inheritance syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--class syntax--inheritance syntax--python\"><span class=\"syntax--entity syntax--other syntax--inherited-class syntax--python\"><span class=\"syntax--support syntax--type syntax--python\"><span>object</span></span></span></span><span class=\"syntax--punctuation syntax--definition syntax--inheritance syntax--end syntax--python\"><span>)</span></span><span class=\"syntax--punctuation syntax--section syntax--class syntax--begin syntax--python\"><span>:</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>max_input_voltage</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--python\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>5</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function syntax--decorator syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--decorator syntax--python\"><span>@</span><span class=\"syntax--support syntax--function syntax--builtin syntax--python\"><span>classmethod</span></span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--storage syntax--type syntax--function syntax--python\"><span>def</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--python\"><span>outcome</span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function syntax--parameters syntax--python\"><span class=\"syntax--variable syntax--parameter syntax--function syntax--python\"><span>cls</span></span><span class=\"syntax--punctuation syntax--separator syntax--parameters syntax--python\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--parameter syntax--function syntax--python\"><span>input_voltage</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--python\"><span>)</span></span><span class=\"syntax--punctuation syntax--section syntax--function syntax--begin syntax--python\"><span>:</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--conditional syntax--python\"><span>if</span></span><span>&nbsp;</span><span>input_voltage</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--python\"><span>&gt;</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--language syntax--python\"><span>cls</span></span><span>.</span><span>m</span><span>ax_input_voltage</span><span>:</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--other syntax--python\"><span>print</span></span><span>(</span><span class=\"syntax--string syntax--quoted syntax--double syntax--single-line syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--python\"><span>&quot;</span></span><span>Input&nbsp;voltage:&nbsp;</span><span class=\"syntax--constant syntax--other syntax--placeholder syntax--python\"><span>{}</span></span><span>V&nbsp;--&nbsp;BURNING!!!</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--python\"><span>&quot;</span></span></span><span>.</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span>f</span><span>ormat</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>input_voltage</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span><span>)</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--conditional syntax--python\"><span>else</span></span><span>:</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--other syntax--python\"><span>print</span></span><span>(</span><span class=\"syntax--string syntax--quoted syntax--double syntax--single-line syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--python\"><span>&quot;</span></span><span>Input&nbsp;voltage:&nbsp;</span><span class=\"syntax--constant syntax--other syntax--placeholder syntax--python\"><span>{}</span></span><span>V&nbsp;--&nbsp;Charging...</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--python\"><span>&quot;</span></span></span><span>.</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span>f</span><span>ormat</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>input_voltage</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span><span>)</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--storage syntax--type syntax--function syntax--python\"><span>def</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--python\"><span>charge</span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function syntax--parameters syntax--python\"><span class=\"syntax--variable syntax--parameter syntax--function syntax--python\"><span>self</span></span><span class=\"syntax--punctuation syntax--separator syntax--parameters syntax--python\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--parameter syntax--function syntax--python\"><span>input_voltage</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--python\"><span>)</span></span><span class=\"syntax--punctuation syntax--section syntax--function syntax--begin syntax--python\"><span>:</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--double syntax--block syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--python\"><span>&quot;&quot;&quot;</span></span><span>Charge&nbsp;the&nbsp;phone&nbsp;with&nbsp;the&nbsp;given&nbsp;input&nbsp;voltage.</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--python\"><span>&quot;&quot;&quot;</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span class=\"syntax--variable syntax--language syntax--python\"><span>self</span></span><span>.</span><span>outcome</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>input_voltage</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--comment syntax--line syntax--number-sign syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--python\"><span>#</span></span><span>&nbsp;Supplier</span><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--class syntax--python\"><span class=\"syntax--storage syntax--type syntax--class syntax--python\"><span>class</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--type syntax--class syntax--python\"><span>Socket</span></span><span class=\"syntax--punctuation syntax--definition syntax--inheritance syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--class syntax--inheritance syntax--python\"><span class=\"syntax--entity syntax--other syntax--inherited-class syntax--python\"><span class=\"syntax--support syntax--type syntax--python\"><span>object</span></span></span></span><span class=\"syntax--punctuation syntax--definition syntax--inheritance syntax--end syntax--python\"><span>)</span></span><span class=\"syntax--punctuation syntax--section syntax--class syntax--begin syntax--python\"><span>:</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>output_voltage</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--python\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--language syntax--python\"><span>None</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--class syntax--python\"><span class=\"syntax--storage syntax--type syntax--class syntax--python\"><span>class</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--type syntax--class syntax--python\"><span>EUSocket</span></span><span class=\"syntax--punctuation syntax--definition syntax--inheritance syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--class syntax--inheritance syntax--python\"><span class=\"syntax--entity syntax--other syntax--inherited-class syntax--python\"><span>Socket</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--inheritance syntax--end syntax--python\"><span>)</span></span><span class=\"syntax--punctuation syntax--section syntax--class syntax--begin syntax--python\"><span>:</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>output_voltage</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--python\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>230</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--class syntax--python\"><span class=\"syntax--storage syntax--type syntax--class syntax--python\"><span>class</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--type syntax--class syntax--python\"><span>USSocket</span></span><span class=\"syntax--punctuation syntax--definition syntax--inheritance syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--class syntax--inheritance syntax--python\"><span class=\"syntax--entity syntax--other syntax--inherited-class syntax--python\"><span>Socket</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--inheritance syntax--end syntax--python\"><span>)</span></span><span class=\"syntax--punctuation syntax--section syntax--class syntax--begin syntax--python\"><span>:</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>output_voltage</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--python\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>120</span></span></span></div></pre></div>\n<p>This is the current scenario:</p>\n<div class=\"table-responsive\">\n    <table class=\"table table-hover\">\n        <thead class=\"thead-inverse\">\n            <tr>\n                <th>Client</th>\n                <th>Supplier</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr>\n                <td>Smartphone</td>\n                <td>EUSocket</td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n<p>If you take a Smartphone instance and you call <code class=\"language-text\">charge</code> with <code class=\"language-text\">EUSocket.output_voltage</code> as argument, you will fail at charging your phone.</p>\n<div class='monokai'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>smartphone</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--python\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span>Smartphone</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--python\"><span>smartphone</span><span>.</span><span>charge</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>EUSocket</span><span>.</span><span>output_voltage</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--python\"><span>&gt;</span><span>&gt;</span><span>&gt;</span></span><span>&nbsp;</span><span>Input</span><span>&nbsp;</span><span>voltage</span><span>:&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>230</span></span><span>V</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--arithmetic syntax--python\"><span>-</span><span>-</span></span><span>&nbsp;</span><span>BURNING</span><span>!!!</span></span></div></pre></div>\n<h2>1. Object Adapter</h2>\n<p>Obvioulsy, you need a phone charger to charge your smarthone. You can think of this phone charger as a completely independent <em>entity</em> from the smartphone and the wall socket. This new entity encapsulates client and supplier, and allows you to call the <code class=\"language-text\">charge</code> method without changing anything, neither in the Smartphone class, nor the Socket class. The phone charger converts an alternate current, high voltage power supply, into a direct current, low voltage power supply that can be used to charge the smartphone.</p>\n<div class='monokai'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--class syntax--python\"><span class=\"syntax--storage syntax--type syntax--class syntax--python\"><span>class</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--type syntax--class syntax--python\"><span>EUAdapter</span></span><span class=\"syntax--punctuation syntax--definition syntax--inheritance syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--class syntax--inheritance syntax--python\"><span class=\"syntax--entity syntax--other syntax--inherited-class syntax--python\"><span class=\"syntax--support syntax--type syntax--python\"><span>object</span></span></span></span><span class=\"syntax--punctuation syntax--definition syntax--inheritance syntax--end syntax--python\"><span>)</span></span><span class=\"syntax--punctuation syntax--section syntax--class syntax--begin syntax--python\"><span>:</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--double syntax--block syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--python\"><span>&quot;&quot;&quot;</span></span><span>EUAdapter&nbsp;encapsulates&nbsp;client&nbsp;(Smartphone)&nbsp;and&nbsp;supplier&nbsp;(EUSocket).</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--python\"><span>&quot;&quot;&quot;</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>input_voltage</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--python\"><span>=</span></span><span>&nbsp;</span><span>EUSocket</span><span>.</span><span>output_voltage</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>output_voltage</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--python\"><span>=</span></span><span>&nbsp;</span><span>Smartphone</span><span>.</span><span>max_input_voltage</span></span></div></pre></div>\n<p>The EUAdapter class is a Supplier to the Smartphone class, and at the same time it’s a Client to the EUSocket class.</p>\n<div class=\"table-responsive\">\n    <table class=\"table table-hover\">\n        <thead class=\"thead-inverse\">\n            <tr>\n                <th>Client</th>\n                <th>Supplier</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr>\n                <td>Smartphone</td>\n                <td>EUAdapter</td>\n            </tr>\n            <tr>\n                <td>EUAdapter</td>\n                <td>EUSocket</td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n<p>If you now take a Smartphone instance and call <code class=\"language-text\">charge</code> with <code class=\"language-text\">EUAdapter.output_voltage</code> as argument, you can finally charge your phone.</p>\n<div class='monokai'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--python\"><span>smartphone</span><span>.</span><span>charge</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>EUAdapter</span><span>.</span><span>output_voltage</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--python\"><span>&gt;</span><span>&gt;</span><span>&gt;</span></span><span>&nbsp;</span><span>Input</span><span>&nbsp;</span><span>voltage</span><span>:&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>5</span></span><span>V</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--arithmetic syntax--python\"><span>-</span><span>-</span></span><span>&nbsp;</span><span>Charging</span><span>...</span></span></div></pre></div>\n<h2>2. Class Adapter</h2>\n<p>You can also think that the combination smartphone + phone charger <em>defines</em> a unique system which can directly use the wall socket.</p>\n<p>You started with a <code class=\"language-text\">Smartphone</code> and a <code class=\"language-text\">Socket</code>, and now you want to define a system which inherits methods and attributes both from <code class=\"language-text\">Smartphone</code> and <code class=\"language-text\">Socket</code>. You have to use <em>multiple inheritance</em>.</p>\n<p>With this approach you don’t create a new entity between the client and the supplier, but you redefine the client in a way that it can directly work with the supplier. You don’t have a <code class=\"language-text\">Smartphone</code> any longer, you have a new entity which is the combination of a <code class=\"language-text\">Smartphone</code> and a <code class=\"language-text\">Socket</code>.</p>\n<p>Since you are getting the <code class=\"language-text\">output_voltage</code> from a <code class=\"language-text\">Socket</code>, you have to define a method <code class=\"language-text\">transform_voltage</code> to convert a high voltage AC to a low voltage DC. Then you need to override the <code class=\"language-text\">charge</code> method inherited from <code class=\"language-text\">Smartphone</code> and call <code class=\"language-text\">transform_voltage</code> before calling the <code class=\"language-text\">outcome</code> method.</p>\n<p>I decided to have two subclasses of Socket to make this example a bit closer to the real world. When you take a Smartphone and a Socket, you define a system which will work for that Smartphone and <strong>that specific type of Socket</strong> (e.g. USSocket), but will not work with the same Smartphone and a different type of Socket (EUSocket).</p>\n<div class='monokai'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--class syntax--python\"><span class=\"syntax--storage syntax--type syntax--class syntax--python\"><span>class</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--type syntax--class syntax--python\"><span>CannotTransformVoltage</span></span><span class=\"syntax--punctuation syntax--definition syntax--inheritance syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--class syntax--inheritance syntax--python\"><span class=\"syntax--entity syntax--other syntax--inherited-class syntax--python\"><span class=\"syntax--support syntax--type syntax--exception syntax--python\"><span>Exception</span></span></span></span><span class=\"syntax--punctuation syntax--definition syntax--inheritance syntax--end syntax--python\"><span>)</span></span><span class=\"syntax--punctuation syntax--section syntax--class syntax--begin syntax--python\"><span>:</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--double syntax--block syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--python\"><span>&quot;&quot;&quot;</span></span><span>Exception&nbsp;raised&nbsp;by&nbsp;the&nbsp;SmartphoneAdapter.</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--string syntax--quoted syntax--double syntax--block syntax--python\"><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--string syntax--quoted syntax--double syntax--block syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;This&nbsp;exception&nbsp;represents&nbsp;the&nbsp;fact&nbsp;that&nbsp;an&nbsp;adapter&nbsp;can&nbsp;not&nbsp;provide&nbsp;the</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--string syntax--quoted syntax--double syntax--block syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;right&nbsp;voltage&nbsp;to&nbsp;the&nbsp;Smartphone&nbsp;if&nbsp;the&nbsp;voltage&nbsp;of&nbsp;the&nbsp;Socket&nbsp;is&nbsp;wrong.</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--python\"><span>&quot;&quot;&quot;</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--statement syntax--python\"><span>pass</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--class syntax--python\"><span class=\"syntax--storage syntax--type syntax--class syntax--python\"><span>class</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--type syntax--class syntax--python\"><span>SmartphoneAdapter</span></span><span class=\"syntax--punctuation syntax--definition syntax--inheritance syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--class syntax--inheritance syntax--python\"><span class=\"syntax--entity syntax--other syntax--inherited-class syntax--python\"><span>Smartphone</span></span><span class=\"syntax--punctuation syntax--separator syntax--inheritance syntax--python\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--other syntax--inherited-class syntax--python\"><span>Socket</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--inheritance syntax--end syntax--python\"><span>)</span></span><span class=\"syntax--punctuation syntax--section syntax--class syntax--begin syntax--python\"><span>:</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function syntax--decorator syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--decorator syntax--python\"><span>@</span><span class=\"syntax--support syntax--function syntax--builtin syntax--python\"><span>classmethod</span></span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--storage syntax--type syntax--function syntax--python\"><span>def</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--python\"><span>transform_voltage</span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function syntax--parameters syntax--python\"><span class=\"syntax--variable syntax--parameter syntax--function syntax--python\"><span>cls</span></span><span class=\"syntax--punctuation syntax--separator syntax--parameters syntax--python\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--parameter syntax--function syntax--python\"><span>input_voltage</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--python\"><span>)</span></span><span class=\"syntax--punctuation syntax--section syntax--function syntax--begin syntax--python\"><span>:</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--conditional syntax--python\"><span>if</span></span><span>&nbsp;</span><span>input_voltage</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--python\"><span>==</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--language syntax--python\"><span>cls</span></span><span>.</span><span>o</span><span>utput_voltage</span><span>:</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--statement syntax--python\"><span>return</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--language syntax--python\"><span>cls</span></span><span>.</span><span>m</span><span>ax_input_voltage</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--conditional syntax--python\"><span>else</span></span><span>:</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--exception syntax--python\"><span>raise</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span>CannotTransformVoltage</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--double syntax--single-line syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--python\"><span>&quot;</span></span><span>Can</span><span class=\"syntax--constant syntax--character syntax--escape syntax--single-quote syntax--python\"><span>\\&#39;</span></span><span>t&nbsp;transform&nbsp;</span><span class=\"syntax--constant syntax--other syntax--placeholder syntax--python\"><span>{0}</span></span><span>-</span><span class=\"syntax--constant syntax--other syntax--placeholder syntax--python\"><span>{1}</span></span><span>V.&nbsp;This&nbsp;adapter&nbsp;transforms&nbsp;</span><span class=\"syntax--constant syntax--other syntax--placeholder syntax--python\"><span>{2}</span></span><span>-</span><span class=\"syntax--constant syntax--other syntax--placeholder syntax--python\"><span>{1}</span></span><span>V.</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--python\"><span>&quot;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span>f</span><span>ormat</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>input_voltage</span><span>,&nbsp;</span><span class=\"syntax--variable syntax--language syntax--python\"><span>cls</span></span><span>.</span><span>m</span><span>ax_input_voltage</span><span>,</span></span></span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--variable syntax--language syntax--python\"><span>cls</span></span><span>.</span><span>o</span><span>utput_voltage</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function syntax--decorator syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--decorator syntax--python\"><span>@</span><span class=\"syntax--support syntax--function syntax--builtin syntax--python\"><span>classmethod</span></span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--storage syntax--type syntax--function syntax--python\"><span>def</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--function syntax--python\"><span>charge</span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function syntax--parameters syntax--python\"><span class=\"syntax--variable syntax--parameter syntax--function syntax--python\"><span>cls</span></span><span class=\"syntax--punctuation syntax--separator syntax--parameters syntax--python\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--parameter syntax--function syntax--python\"><span>input_voltage</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--parameters syntax--end syntax--python\"><span>)</span></span><span class=\"syntax--punctuation syntax--section syntax--function syntax--begin syntax--python\"><span>:</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--exception syntax--python\"><span>try</span></span><span>:</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>voltage</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--python\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span class=\"syntax--variable syntax--language syntax--python\"><span>cls</span></span><span>.</span><span>transform_voltage</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>input_voltage</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span class=\"syntax--variable syntax--language syntax--python\"><span>cls</span></span><span>.</span><span>outcome</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>voltage</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--exception syntax--python\"><span>except</span></span><span>&nbsp;</span><span>CannotTransformVoltage</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--other syntax--python\"><span>as</span></span><span>&nbsp;</span><span>e</span><span>:</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--other syntax--python\"><span>print</span></span><span>(</span><span>e</span><span>)</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--class syntax--python\"><span class=\"syntax--storage syntax--type syntax--class syntax--python\"><span>class</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--type syntax--class syntax--python\"><span>SmartphoneEUAdapter</span></span><span class=\"syntax--punctuation syntax--definition syntax--inheritance syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--class syntax--inheritance syntax--python\"><span class=\"syntax--entity syntax--other syntax--inherited-class syntax--python\"><span>SmartphoneAdapter</span></span><span class=\"syntax--punctuation syntax--separator syntax--inheritance syntax--python\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--other syntax--inherited-class syntax--python\"><span>EUSocket</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--inheritance syntax--end syntax--python\"><span>)</span></span><span class=\"syntax--punctuation syntax--section syntax--class syntax--begin syntax--python\"><span>:</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--double syntax--block syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--python\"><span>&quot;&quot;&quot;</span></span><span>System&nbsp;(smartphone&nbsp;+&nbsp;adapter)&nbsp;for&nbsp;a&nbsp;European&nbsp;Socket.</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--string syntax--quoted syntax--double syntax--block syntax--python\"><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--string syntax--quoted syntax--double syntax--block syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;Note:&nbsp;SmartphoneAdapter&nbsp;already&nbsp;inherited&nbsp;from&nbsp;Smartphone&nbsp;and&nbsp;Socket,&nbsp;but&nbsp;by&nbsp;re-inheriting&nbsp;from&nbsp;EUSocket&nbsp;we&nbsp;redefine&nbsp;all&nbsp;the&nbsp;stuff&nbsp;inherited&nbsp;from&nbsp;Socket.</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--string syntax--quoted syntax--double syntax--block syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--python\"><span>&quot;&quot;&quot;</span></span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--statement syntax--python\"><span>pass</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--class syntax--python\"><span class=\"syntax--storage syntax--type syntax--class syntax--python\"><span>class</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--type syntax--class syntax--python\"><span>SmartphoneUSAdapter</span></span><span class=\"syntax--punctuation syntax--definition syntax--inheritance syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--class syntax--inheritance syntax--python\"><span class=\"syntax--entity syntax--other syntax--inherited-class syntax--python\"><span>SmartphoneAdapter</span></span><span class=\"syntax--punctuation syntax--separator syntax--inheritance syntax--python\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--other syntax--inherited-class syntax--python\"><span>USSocket</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--inheritance syntax--end syntax--python\"><span>)</span></span><span class=\"syntax--punctuation syntax--section syntax--class syntax--begin syntax--python\"><span>:</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--double syntax--block syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--python\"><span>&quot;&quot;&quot;</span></span><span>System&nbsp;(smartphone&nbsp;+&nbsp;adapter)&nbsp;for&nbsp;an&nbsp;American&nbsp;Socket.</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--python\"><span>&quot;&quot;&quot;</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--statement syntax--python\"><span>pass</span></span></span></div></pre></div>\n<p>Here are the two classes you are dealing with:</p>\n<div class=\"table-responsive\">\n    <table class=\"table table-hover\">\n        <thead class=\"thead-inverse\">\n            <tr>\n                <th>Client</th>\n                <th>Supplier</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr>\n                <td>SmartphoneEUAdapter</td>\n                <td>EUSocket</td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n<p>If you now take a <code class=\"language-text\">SmartphoneEUAdapter</code> instance and call <code class=\"language-text\">charge</code> with <code class=\"language-text\">EUSocket.output_voltage</code> as argument, you can see that you can charge your phone. However, if you take the same instance and call <code class=\"language-text\">charge</code> with <code class=\"language-text\">USSocket.output_voltage</code> as argument, you get a <code class=\"language-text\">CannotTransformVoltage</code> exception. In the latter case, you are using the wrong Adapter for a particular Supplier.</p>\n<div class='monokai'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>smarthone_with_eu_adapter</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--python\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--function-call syntax--python\"><span>SmartphoneEUAdapter</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--python\"><span>smarthone_with_eu_adapter</span><span>.</span><span>charge</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>EUSocket</span><span>.</span><span>output_voltage</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--python\"><span>&gt;</span><span>&gt;</span><span>&gt;</span></span><span>&nbsp;</span><span>Input</span><span>&nbsp;</span><span>voltage</span><span>:&nbsp;</span><span class=\"syntax--constant syntax--numeric syntax--integer syntax--decimal syntax--python\"><span>5</span></span><span>V</span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--arithmetic syntax--python\"><span>-</span><span>-</span></span><span>&nbsp;</span><span>Charging</span><span>...</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--meta syntax--function-call syntax--python\"><span>smarthone_with_eu_adapter</span><span>.</span><span>charge</span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--python\"><span>(</span></span><span class=\"syntax--meta syntax--function-call syntax--arguments syntax--python\"><span>USSocket</span><span>.</span><span>output_voltage</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--python\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--python\"><span class=\"syntax--keyword syntax--operator syntax--comparison syntax--python\"><span>&gt;</span><span>&gt;</span><span>&gt;</span></span><span>&nbsp;</span><span>Can</span><span class=\"syntax--string syntax--quoted syntax--single syntax--single-line syntax--python\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--python\"><span>&#39;</span></span><span>t&nbsp;transform&nbsp;120-5V.&nbsp;This&nbsp;adapter&nbsp;transforms&nbsp;230-5V.</span></span></span></div></pre></div>\n<h2>Object adapter or Class Adapter?</h2>\n<p>There are two <a href=\"http://stackoverflow.com/questions/5467005/adapter-pattern-class-adapter-vs-object-adapter\">strong reasons</a> to prefer the Object Adapter over the Class Adapter:</p>\n<ul>\n<li>loose coupling</li>\n<li>multiple inheritance is tricky</li>\n</ul>\n<p>With the Object Adapter you have <a href=\"https://en.wikipedia.org/wiki/Loose_coupling\">loose coupling</a>, so the Client is not required to know anything about the Supplier. The Smartphone doesn’t care where it gets its 5 volts. As long as it gets them, it will charge.</p>\n<p>With the Class Adapter you lose this property, because you have a new entity which is <em>defined</em> by the Client and the Supplier, and it works only for this specific type of Client and specific type of Supplier (e.g. SmartphoneEUAdapter doesn’t work with a USSocket). This means that you have created an interface which allows you to use the Client and the Supplier, but where Client and Supplier are <em>strongly coupled</em>. Since you usually want to design interfaces to <em>uncouple</em> things, this is not a desired property.</p>\n<p>Another reason why I decided to define two subclasses of Socket is to show that multiple inheritance can be tricky. As we can see in the code above, <code class=\"language-text\">SmartphoneAdapter</code> already contains all attributes and methods from <code class=\"language-text\">Smartphone</code> and <code class=\"language-text\">Socket</code>. However, since what you really want to use are the subclasses of <code class=\"language-text\">Socket</code>, namely <code class=\"language-text\">EUSocket</code> and <code class=\"language-text\">USSocket</code>, you need to re-inherit when you subclass <code class=\"language-text\">SmartphoneAdapter</code>. You can use a different strategy and create <code class=\"language-text\">SmartphoneEUAdapter</code> by directly inheriting from <code class=\"language-text\">Smartphone</code> and <code class=\"language-text\">EUSocket</code>, but then you would need to do the same for <code class=\"language-text\">SmartphoneUSAdapter</code>, which needs to inherit from <code class=\"language-text\">Smartphone</code> and <code class=\"language-text\">USSocket</code>. This will result in duplicate code, because you would need to write <code class=\"language-text\">transform_voltage</code> and <code class=\"language-text\">charge</code> twice.</p>\n<p>You need the code? Grab it <a href=\"https://github.com/jackaljack/design-patterns\">here</a>!</p>","frontmatter":{"title":"Adapter pattern in Python","date":"November 26, 2016"}}},"pageContext":{"slug":"/2016-11-26-adapter-pattern-in-python/","previous":null,"next":{"fields":{"slug":"/2016-11-26-facade-pattern-in-python/"},"frontmatter":{"title":"Façade pattern in Python"}}}}