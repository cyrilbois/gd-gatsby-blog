{"data":{"site":{"siteMetadata":{"title":"Giacomo Debidda","author":"Giacomo Debidda"}},"markdownRemark":{"id":"05f3fcf1-b17f-5d73-a389-f50b1d05bc1d >>> MarkdownRemark","excerpt":"A  git hook  is a script that git executes before or after a relevant git event or action is triggered. The hooks are stored in theâ€¦","html":"<p>A <a href=\"http://githooks.com/\">git hook</a> is a script that git executes before or after a relevant git event or action is triggered. The hooks are stored in the <code class=\"language-text\">.git/hooks</code> directory of your repository, which is created automatically when you run <code class=\"language-text\">git init</code>.</p>\n<p>Git hooks can be really useful to enforce a certain policy on your commits, push your changes to a continuous integration server, or automatically deploy your code.</p>\n<p>I wanted to enforce a very simple policy for my commits: <em>no broken code should be deployed on the master branch</em>. So I wrote this small <code class=\"language-text\">pre-commit</code> hook:</p>\n<div class='monokai'><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--shell\"><span class=\"syntax--comment syntax--line syntax--number-sign syntax--shell\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--shell\"><span>#</span></span><span>!/bin/sh</span><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--shell\"><span>current_branch=</span><span class=\"syntax--string syntax--interpolated syntax--backtick syntax--shell\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--shell\"><span>`</span></span><span>git&nbsp;branch&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--pipe syntax--shell\"><span>|</span></span><span>&nbsp;grep&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--shell\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--shell\"><span>&#39;</span></span><span>*</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--shell\"><span>&#39;</span></span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--pipe syntax--shell\"><span>|</span></span><span>&nbsp;sed&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--shell\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--shell\"><span>&#39;</span></span><span>s/*&nbsp;//</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--shell\"><span>&#39;</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--shell\"><span>`</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--shell\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"syntax--source syntax--shell\"><span class=\"syntax--meta syntax--scope syntax--if-block syntax--shell\"><span class=\"syntax--keyword syntax--control syntax--shell\"><span>if</span></span><span>&nbsp;[&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--double syntax--shell\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--shell\"><span>&quot;</span></span><span class=\"syntax--variable syntax--other syntax--normal syntax--shell\"><span class=\"syntax--punctuation syntax--definition syntax--variable syntax--shell\"><span>$</span></span><span>current_branch</span></span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--shell\"><span>&quot;</span></span></span><span>&nbsp;=&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--double syntax--shell\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--shell\"><span>&quot;</span></span><span>master</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--shell\"><span>&quot;</span></span></span><span>&nbsp;]</span><span class=\"syntax--keyword syntax--operator syntax--list syntax--shell\"><span>;</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--shell\"><span>then</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--shell\"><span class=\"syntax--meta syntax--scope syntax--if-block syntax--shell\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--support syntax--function syntax--builtin syntax--shell\"><span>echo</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--double syntax--shell\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--shell\"><span>&quot;</span></span><span>You&nbsp;are&nbsp;about&nbsp;to&nbsp;commit&nbsp;on&nbsp;master.&nbsp;I&nbsp;will&nbsp;run&nbsp;your&nbsp;tests&nbsp;first...</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--shell\"><span>&quot;</span></span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--shell\"><span class=\"syntax--meta syntax--scope syntax--if-block syntax--shell\"><span>&nbsp;&nbsp;&nbsp;&nbsp;python&nbsp;-m&nbsp;unittest&nbsp;discover&nbsp;tests</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--shell\"><span class=\"syntax--meta syntax--scope syntax--if-block syntax--shell\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--scope syntax--if-block syntax--shell\"><span class=\"syntax--keyword syntax--control syntax--shell\"><span>if</span></span><span>&nbsp;[&nbsp;</span><span class=\"syntax--variable syntax--other syntax--special syntax--shell\"><span class=\"syntax--punctuation syntax--definition syntax--variable syntax--shell\"><span>$</span></span><span>?</span></span><span>&nbsp;-eq&nbsp;0&nbsp;]</span><span class=\"syntax--keyword syntax--operator syntax--list syntax--shell\"><span>;</span></span><span>&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--shell\"><span>then</span></span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--shell\"><span class=\"syntax--meta syntax--scope syntax--if-block syntax--shell\"><span class=\"syntax--meta syntax--scope syntax--if-block syntax--shell\"><span class=\"syntax--punctuation syntax--whitespace syntax--comment syntax--leading syntax--shell\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"syntax--comment syntax--line syntax--number-sign syntax--shell\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--shell\"><span>#</span></span><span>&nbsp;tests&nbsp;passed,&nbsp;proceed&nbsp;to&nbsp;prepare&nbsp;commit&nbsp;message</span><span>&nbsp;</span></span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--shell\"><span class=\"syntax--meta syntax--scope syntax--if-block syntax--shell\"><span class=\"syntax--meta syntax--scope syntax--if-block syntax--shell\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--support syntax--function syntax--builtin syntax--shell\"><span>exit</span></span><span>&nbsp;0</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--shell\"><span class=\"syntax--meta syntax--scope syntax--if-block syntax--shell\"><span class=\"syntax--meta syntax--scope syntax--if-block syntax--shell\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--shell\"><span>else</span></span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--shell\"><span class=\"syntax--meta syntax--scope syntax--if-block syntax--shell\"><span class=\"syntax--meta syntax--scope syntax--if-block syntax--shell\"><span class=\"syntax--punctuation syntax--whitespace syntax--comment syntax--leading syntax--shell\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"syntax--comment syntax--line syntax--number-sign syntax--shell\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--shell\"><span>#</span></span><span>&nbsp;some&nbsp;tests&nbsp;failed,&nbsp;prevent&nbsp;from&nbsp;committing&nbsp;broken&nbsp;code&nbsp;on&nbsp;master</span><span>&nbsp;</span></span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--shell\"><span class=\"syntax--meta syntax--scope syntax--if-block syntax--shell\"><span class=\"syntax--meta syntax--scope syntax--if-block syntax--shell\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--support syntax--function syntax--builtin syntax--shell\"><span>echo</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--double syntax--shell\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--shell\"><span>&quot;</span></span><span>Some&nbsp;tests&nbsp;failed.&nbsp;You&nbsp;are&nbsp;not&nbsp;allowed&nbsp;to&nbsp;commit&nbsp;broken&nbsp;code&nbsp;on&nbsp;master!&nbsp;Aborting&nbsp;the&nbsp;commit.</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--shell\"><span>&quot;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--shell\"><span class=\"syntax--meta syntax--scope syntax--if-block syntax--shell\"><span class=\"syntax--meta syntax--scope syntax--if-block syntax--shell\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--support syntax--function syntax--builtin syntax--shell\"><span>echo</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--double syntax--shell\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--shell\"><span>&quot;</span></span><span>Note:&nbsp;you&nbsp;can&nbsp;still&nbsp;commit&nbsp;broken&nbsp;code&nbsp;on&nbsp;feature&nbsp;branches</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--shell\"><span>&quot;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--shell\"><span class=\"syntax--meta syntax--scope syntax--if-block syntax--shell\"><span class=\"syntax--meta syntax--scope syntax--if-block syntax--shell\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--support syntax--function syntax--builtin syntax--shell\"><span>exit</span></span><span>&nbsp;1</span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--shell\"><span class=\"syntax--meta syntax--scope syntax--if-block syntax--shell\"><span class=\"syntax--meta syntax--scope syntax--if-block syntax--shell\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--keyword syntax--control syntax--shell\"><span>fi</span></span></span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--shell\"><span class=\"syntax--meta syntax--scope syntax--if-block syntax--shell\"><span class=\"syntax--keyword syntax--control syntax--shell\"><span>fi</span></span></span></span></div></pre></div>\n<p>Itâ€™s a simple <em>client side hook</em> that runs all of my Python tests before committing on <code class=\"language-text\">master</code>. I can still create a feature branch and commit broken code on that, but as soon as I try to merge the feature branch into master, all test run. If any of the tests fails I canâ€™t commit. Simple as that.</p>\n<p>Git hooks are language agnostic. I wrote this small hook as a shell script, but you can use other languages liek Perl, Ruby or Python. <a href=\"https://github.com/bahattincinic/python-git-hook/blob/master/pre-commit\">Here</a> is an example of a <code class=\"language-text\">pre-commit</code> hook in written in Python.</p>","frontmatter":{"title":"A simple git hook for your Python projects","date":"September 10, 2017"}}},"pageContext":{"slug":"/2017-09-10-a-simple-git-hook-for-your-python-projects/","previous":{"fields":{"slug":"/2017-08-31-visualize-earthquakes-with-plotly-dash/"},"frontmatter":{"title":"Visualize Earthquakes with Plotly Dash"}},"next":{"fields":{"slug":"/2017-10-13-how-to-import-d3-plugins-with-webpack/"},"frontmatter":{"title":"How to import d3 plugins with Webpack"}}}}