{"data":{"site":{"siteMetadata":{"title":"Giacomo Debidda","author":"Giacomo Debidda"}},"markdownRemark":{"id":"42216d59-d0bc-5006-b953-fdb4df6e9f0f >>> MarkdownRemark","excerpt":"Three years ago I followed a few data science courses offered by the Johns Hopkins University on Coursera. Today these courses should be…","html":"<p>Three years ago I followed a few data science courses offered by the Johns Hopkins University on Coursera. Today these courses should be available among the ones in the <a href=\"https://www.coursera.org/specializations/jhu-data-science#courses\">Data Science specialization</a>. All programming assignments were – and still are – in R. At the end of one course we had to create a small web application with <a href=\"https://shiny.rstudio.com/\">Shiny</a> and deploy it on <a href=\"https://www.shinyapps.io/\">shinyapps</a>. At the time I wasn’t that comfortable in writing Javascript and CSS, so having to worry only about R code was quite a relief. I still have the <a href=\"https://github.com/jackdbd/ShinyEarthquakes\">web app that I wrote</a>.</p>\n<p>Some time ago I had the idea of rewriting the entire thing in Python, so I started looking for a Python equivalent of Shiny. I stumbled upon <a href=\"https://github.com/adamhajari/spyre\">Spyre</a>, <a href=\"https://github.com/stitchfix/pyxley\">Pyxley</a> and <a href=\"https://github.com/apache/incubator-superset\">Superset</a>). I immediately discarded Superset. It looked amazing, but I wanted something for a very small application, not an enterprise-ready business intelligence tool. Spyre didn’t convince me, and I tried but struggled with Pyxley.</p>\n<p>I toyed with the idea of writing the application with a combination of Flask for the logic and routing, Vue.js for the front-end, Webpack for asset bundling and maybe a SASS framework (or toolkit, like <a href=\"http://oddbird.net/susy/\">Susy</a>) for styling. I knew I would have to invest a considerable amount of time to put everything together, so I left the project on the side for a while.</p>\n<p>A few months passed and I discovered a few more packages: <a href=\"https://github.com/jwkvam/bowtie\">Bowtie</a>, <a href=\"https://demo.bokehplots.com/\">Bokeh</a>, <a href=\"https://plot.ly/dash/\">Dash</a>. I found out that you can also create an <a href=\"https://plot.ly/python/create-online-dashboard/\">online dashboard with plotly</a>.</p>\n<p>According to the <a href=\"https://plot.ly/dash/introduction\">documentation</a>, “Dash is simple enough that you can bind a user interface around your Python code in an afternoon”. In fact, for a simple dashboard with a dropdown menu as the input, and a time series as the output, you need <a href=\"https://medium.com/@plotlygraphs/introducing-dash-5ecf7191b503\">less than 50 lines of code</a>.</p>\n<p>Dash allows you to create <em>reactive</em> web applications. This means that changes to <em>input</em> UI component/s trigger changes to an <em>output</em> UI component.</p>\n<p>The UI components are created with D3.js and WebGL, so they look amazing. And you get all of this without having to write any HTML/JS/CSS. Under the hood Dash converts React components (written in JavaScript) into Python classes that are compatible with the Dash ecosystem.</p>\n<p>The <a href=\"https://plot.ly/dash/getting-started\">getting started</a> is top-notch, so I suggest you to start from there if you want to try Dash out. Here I will briefly describe what I did for my app.</p>\n<p><img src=\"./demo.gif\" alt=\"A GIF showing the Dash-Earthquakes Dash app\" title=\"Dash-Earthquakes\"></p>\n<h2>Imports</h2>\n<p>Here are my import statements. <code class=\"language-text\">dash_html_components</code> are pure HTML components, and <code class=\"language-text\">dash_core_components</code> are the reactive components. You need to use <em>one or more</em> <code class=\"language-text\">Input</code> to trigger changes to a <em>single</em> <code class=\"language-text\">Output</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">import</span> arrow\n<span class=\"token keyword\">import</span> requests\n<span class=\"token keyword\">import</span> functools\n<span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n<span class=\"token keyword\">import</span> dash_core_components <span class=\"token keyword\">as</span> dcc\n<span class=\"token keyword\">import</span> dash_html_components <span class=\"token keyword\">as</span> html\n<span class=\"token keyword\">import</span> plotly<span class=\"token punctuation\">.</span>graph_objs <span class=\"token keyword\">as</span> go\n<span class=\"token keyword\">import</span> plotly<span class=\"token punctuation\">.</span>plotly <span class=\"token keyword\">as</span> py\n<span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> Flask<span class=\"token punctuation\">,</span> json\n<span class=\"token keyword\">from</span> dash <span class=\"token keyword\">import</span> Dash\n<span class=\"token keyword\">from</span> dash<span class=\"token punctuation\">.</span>dependencies <span class=\"token keyword\">import</span> Input<span class=\"token punctuation\">,</span> Output\n<span class=\"token keyword\">from</span> dotenv <span class=\"token keyword\">import</span> load_dotenv</code></pre></div>\n<p>When the app is running on my computer I enable <code class=\"language-text\">debug</code> and load the environment variables from a <code class=\"language-text\">.env</code> file (not checked in).\nWhen the app is running on <a href=\"https://belle-croissant-54211.herokuapp.com/\">Heroku</a> I disable <code class=\"language-text\">debug</code> and use an external Javascript snippet to include Google Analytics. I can’t remeber where I found the <code class=\"language-text\">try/except</code> to understand whether the app is on Heroku or not, but I find it very pythonic.</p>\n<blockquote>\n<p><a href=\"https://docs.python.org/3/glossary.html#term-eafp\">EAFP</a>: easier to ask for forgiveness than permission.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># the app is on Heroku</span>\n    os<span class=\"token punctuation\">.</span>environ<span class=\"token punctuation\">[</span><span class=\"token string\">'DYNO'</span><span class=\"token punctuation\">]</span>\n    debug <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n    <span class=\"token comment\"># google analytics with my tracking ID</span>\n    external_js<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string\">'https://codepen.io/jackdbd/pen/NgmpzR.js'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> KeyError<span class=\"token punctuation\">:</span>\n    debug <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n    dotenv_path <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>dirname<span class=\"token punctuation\">(</span>__file__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'.env'</span><span class=\"token punctuation\">)</span>\n    load_dotenv<span class=\"token punctuation\">(</span>dotenv_path<span class=\"token punctuation\">)</span></code></pre></div>\n<p>The world map I am displaying requires a <a href=\"https://plot.ly/settings/api\">plotly API key</a> and a <a href=\"https://www.mapbox.com/studio/account/tokens/\">Mapbox API access token</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">py<span class=\"token punctuation\">.</span>sign_in<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>environ<span class=\"token punctuation\">[</span><span class=\"token string\">'PLOTLY_USERNAME'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> os<span class=\"token punctuation\">.</span>environ<span class=\"token punctuation\">[</span><span class=\"token string\">'PLOTLY_API_KEY'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nmapbox_access_token <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>environ<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'MAPBOX_ACCESS_TOKEN'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'mapbox-token'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Here is how I initialize my Dash app. I create a Flask app first because I want to use a secret key. I don’t think you can set a secret key directly when you instantiate the <code class=\"language-text\">Dash</code> class. </p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">app_name <span class=\"token operator\">=</span> <span class=\"token string\">'Dash Earthquakes'</span>\nserver <span class=\"token operator\">=</span> Flask<span class=\"token punctuation\">(</span>app_name<span class=\"token punctuation\">)</span>\nserver<span class=\"token punctuation\">.</span>secret_key <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>environ<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'SECRET_KEY'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'default-secret-key'</span><span class=\"token punctuation\">)</span>\napp <span class=\"token operator\">=</span> Dash<span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span>app_name<span class=\"token punctuation\">,</span> server<span class=\"token operator\">=</span>server<span class=\"token punctuation\">)</span></code></pre></div>\n<h2>Data</h2>\n<p>I get the latest 4.5+ magnitude earthquakes from the <a href=\"https://www.usgs.gov/\">USGS</a> website with a basic, synchronous <code class=\"language-text\">GET</code> request.\nNext time I will try to make an asynchronous request with <a href=\"http://terriblecode.com/blog/asynchronous-http-requests-in-python/\">asyncio</a> or one of the following libraries: <a href=\"https://github.com/kennethreitz/grequests\">grequests</a>, <a href=\"https://github.com/theelous3/asks\">asks</a>, <a href=\"https://github.com/scribu/curio-http\">curio-http</a>, <a href=\"https://github.com/ross/requests-futures\">requests-futures</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">usgs <span class=\"token operator\">=</span> <span class=\"token string\">'http://earthquake.usgs.gov/earthquakes/'</span>\ngeoJsonFeed <span class=\"token operator\">=</span> <span class=\"token string\">'feed/v1.0/summary/4.5_month.geojson'</span>\nurl <span class=\"token operator\">=</span> <span class=\"token string\">'{}{}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>usgs<span class=\"token punctuation\">,</span> geoJsonFeed<span class=\"token punctuation\">)</span>\nreq <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\ndata <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Choosing the right colors for a visualization is <a href=\"https://jakevdp.github.io/blog/2014/10/16/how-bad-is-your-colormap/\">surprisingly hard</a>, so I use <a href=\"http://colorbrewer2.org/\">ColorBrewer</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># http://colorbrewer2.org/#type=sequential&amp;scheme=YlOrRd&amp;n=5</span>\ncolorscale_magnitude <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'#ffffb2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'#fecc5c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'#fd8d3c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">0.75</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'#f03b20'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'#bd0026'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># http://colorbrewer2.org/#type=sequential&amp;scheme=Greys&amp;n=3</span>\ncolorscale_depth <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'#f0f0f0'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'#bdbdbd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'#636363'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<p>Finally, some Dash code. Every Dash app requires a <code class=\"language-text\">layout</code>. The python code you write here will be converted in HTML components. I use a few functions to create portions of the dashboard. This way the layout is a bit cleaner and easier to modify.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">app<span class=\"token punctuation\">.</span>layout <span class=\"token operator\">=</span> html<span class=\"token punctuation\">.</span>Div<span class=\"token punctuation\">(</span>\n    children<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>\n        create_header<span class=\"token punctuation\">(</span>app_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        html<span class=\"token punctuation\">.</span>Div<span class=\"token punctuation\">(</span>\n            children<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>\n                html<span class=\"token punctuation\">.</span>Div<span class=\"token punctuation\">(</span>create_dropdowns<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> className<span class=\"token operator\">=</span><span class=\"token string\">'row'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                html<span class=\"token punctuation\">.</span>Div<span class=\"token punctuation\">(</span>create_content<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> className<span class=\"token operator\">=</span><span class=\"token string\">'row'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                html<span class=\"token punctuation\">.</span>Div<span class=\"token punctuation\">(</span>create_description<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> className<span class=\"token operator\">=</span><span class=\"token string\">'row'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                html<span class=\"token punctuation\">.</span>Div<span class=\"token punctuation\">(</span>create_table<span class=\"token punctuation\">(</span>dataframe<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> className<span class=\"token operator\">=</span><span class=\"token string\">'row'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\"># html.Hr(),</span>\n        create_footer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    className<span class=\"token operator\">=</span><span class=\"token string\">'container'</span><span class=\"token punctuation\">,</span>\n    style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'font-family'</span><span class=\"token punctuation\">:</span> theme<span class=\"token punctuation\">[</span><span class=\"token string\">'font-family'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Here are a couple of functions that are responsible for a portion of the UI. If you want you can check the complete code on <a href=\"https://github.com/jackdbd/dash-earthquakes\">GitHub</a>.</p>\n<p><code class=\"language-text\">create_dropdown</code> creates two <strong>dash core components</strong>. They have to be dash core components, and not simple HTML elements, because each dropdown is an <code class=\"language-text\">Input</code> for the <code class=\"language-text\">Graph</code> object (also a dash core component).</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">create_dropdowns</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    drop1 <span class=\"token operator\">=</span> dcc<span class=\"token punctuation\">.</span>Dropdown<span class=\"token punctuation\">(</span>\n        options<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>\n            <span class=\"token punctuation\">{</span><span class=\"token string\">'label'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Light'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'value'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'light'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">{</span><span class=\"token string\">'label'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Dark'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'value'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'dark'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">{</span><span class=\"token string\">'label'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Satellite'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'value'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'satellite'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token string\">'label'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Custom'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">'value'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'mapbox://styles/jackdbd/cj6nva4oi14542rqr3djx1liz'</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        value<span class=\"token operator\">=</span><span class=\"token string\">'dark'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token string\">'dropdown-map-style'</span><span class=\"token punctuation\">,</span>\n        className<span class=\"token operator\">=</span><span class=\"token string\">'three columns offset-by-one'</span>\n    <span class=\"token punctuation\">)</span>\n    drop2 <span class=\"token operator\">=</span> dcc<span class=\"token punctuation\">.</span>Dropdown<span class=\"token punctuation\">(</span>\n        options<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>\n            <span class=\"token punctuation\">{</span><span class=\"token string\">'label'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'World'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'value'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'world'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">{</span><span class=\"token string\">'label'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Europe'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'value'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'europe'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">{</span><span class=\"token string\">'label'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'North America'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'value'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'north_america'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">{</span><span class=\"token string\">'label'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'South America'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'value'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'south_america'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">{</span><span class=\"token string\">'label'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Africa'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'value'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'africa'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">{</span><span class=\"token string\">'label'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Asia'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'value'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'asia'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">{</span><span class=\"token string\">'label'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Oceania'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'value'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'oceania'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        value<span class=\"token operator\">=</span><span class=\"token string\">'world'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token string\">'dropdown-region'</span><span class=\"token punctuation\">,</span>\n        className<span class=\"token operator\">=</span><span class=\"token string\">'three columns offset-by-four'</span>\n    <span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>drop1<span class=\"token punctuation\">,</span> drop2<span class=\"token punctuation\">]</span></code></pre></div>\n<p><code class=\"language-text\">create_content</code> creates a <code class=\"language-text\">DIV</code> with an empty figure inside and return it. The figure will be updated when <code class=\"language-text\">_update_graph</code> is triggered (see below).</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">create_content</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    graph <span class=\"token operator\">=</span> dcc<span class=\"token punctuation\">.</span>Graph<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token string\">'graph-geo'</span><span class=\"token punctuation\">)</span>\n    content <span class=\"token operator\">=</span> html<span class=\"token punctuation\">.</span>Div<span class=\"token punctuation\">(</span>graph<span class=\"token punctuation\">,</span> <span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token string\">'content'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> content</code></pre></div>\n<p>Now that you have inputs – the two dropdowns – and an output – the Graph – you can define the reactive callback <code class=\"language-text\">_update_graph</code>.</p>\n<p>The way an <code class=\"language-text\">Input</code> object and an <code class=\"language-text\">Output</code> object are created is with the dash core component <code class=\"language-text\">id</code> attribute. I really like the way the relationship between inputs and output must be declared. It’s very explicit: the <code class=\"language-text\">value</code> attribute of a <code class=\"language-text\">Dropdown</code> component triggers a change in the <code class=\"language-text\">figure</code> attribute of the <code class=\"language-text\">Graph</code> component.</p>\n<p><code class=\"language-text\">_update_graph</code> is rather long because every <code class=\"language-text\">Figure</code> needs a <code class=\"language-text\">layout</code> and some <code class=\"language-text\">data</code>. I have to define a bunch of parameters for the <code class=\"language-text\">layout</code> and two overlaid <code class=\"language-text\">Scattermapbox</code> for the <code class=\"language-text\">data</code>.</p>\n<p>I use the underscore in front of this function to suggest that it should not be called. In fact, only changes to the dropdown values should trigger its execution.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">@app<span class=\"token punctuation\">.</span>callback<span class=\"token punctuation\">(</span>\n    output<span class=\"token operator\">=</span>Output<span class=\"token punctuation\">(</span><span class=\"token string\">'graph-geo'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'figure'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    inputs<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>Input<span class=\"token punctuation\">(</span><span class=\"token string\">'dropdown-map-style'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'value'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            Input<span class=\"token punctuation\">(</span><span class=\"token string\">'dropdown-region'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'value'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">_update_graph</span><span class=\"token punctuation\">(</span>map_style<span class=\"token punctuation\">,</span> region<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    dff <span class=\"token operator\">=</span> dataframe\n    radius_multiplier <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'inner'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'outer'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span>\n\n    layout <span class=\"token operator\">=</span> go<span class=\"token punctuation\">.</span>Layout<span class=\"token punctuation\">(</span>\n        title<span class=\"token operator\">=</span>metadata<span class=\"token punctuation\">[</span><span class=\"token string\">'title'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        autosize<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n        hovermode<span class=\"token operator\">=</span><span class=\"token string\">'closest'</span><span class=\"token punctuation\">,</span>\n        height<span class=\"token operator\">=</span><span class=\"token number\">750</span><span class=\"token punctuation\">,</span>\n        font<span class=\"token operator\">=</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>family<span class=\"token operator\">=</span>theme<span class=\"token punctuation\">[</span><span class=\"token string\">'font-family'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        margin<span class=\"token operator\">=</span>go<span class=\"token punctuation\">.</span>Margin<span class=\"token punctuation\">(</span>l<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> r<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> t<span class=\"token operator\">=</span><span class=\"token number\">45</span><span class=\"token punctuation\">,</span> b<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        mapbox<span class=\"token operator\">=</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>\n            accesstoken<span class=\"token operator\">=</span>mapbox_access_token<span class=\"token punctuation\">,</span>\n            bearing<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n            center<span class=\"token operator\">=</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>\n                lat<span class=\"token operator\">=</span>regions<span class=\"token punctuation\">[</span>region<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'lat'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                lon<span class=\"token operator\">=</span>regions<span class=\"token punctuation\">[</span>region<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'lon'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            pitch<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n            zoom<span class=\"token operator\">=</span>regions<span class=\"token punctuation\">[</span>region<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'zoom'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            style<span class=\"token operator\">=</span>map_style<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span>\n\n    data <span class=\"token operator\">=</span> go<span class=\"token punctuation\">.</span>Data<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n        <span class=\"token comment\"># outer circles represent magnitude</span>\n        go<span class=\"token punctuation\">.</span>Scattermapbox<span class=\"token punctuation\">(</span>\n            lat<span class=\"token operator\">=</span>dff<span class=\"token punctuation\">[</span><span class=\"token string\">'Latitude'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            lon<span class=\"token operator\">=</span>dff<span class=\"token punctuation\">[</span><span class=\"token string\">'Longitude'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            mode<span class=\"token operator\">=</span><span class=\"token string\">'markers'</span><span class=\"token punctuation\">,</span>\n            marker<span class=\"token operator\">=</span>go<span class=\"token punctuation\">.</span>Marker<span class=\"token punctuation\">(</span>\n                size<span class=\"token operator\">=</span>dff<span class=\"token punctuation\">[</span><span class=\"token string\">'Magnitude'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> radius_multiplier<span class=\"token punctuation\">[</span><span class=\"token string\">'outer'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                colorscale<span class=\"token operator\">=</span>colorscale_magnitude<span class=\"token punctuation\">,</span>\n                color<span class=\"token operator\">=</span>dff<span class=\"token punctuation\">[</span><span class=\"token string\">'Magnitude'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                opacity<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            text<span class=\"token operator\">=</span>dff<span class=\"token punctuation\">[</span><span class=\"token string\">'Text'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token comment\"># hoverinfo='text',</span>\n            showlegend<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\"># inner circles represent depth</span>\n        go<span class=\"token punctuation\">.</span>Scattermapbox<span class=\"token punctuation\">(</span>\n            lat<span class=\"token operator\">=</span>dff<span class=\"token punctuation\">[</span><span class=\"token string\">'Latitude'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            lon<span class=\"token operator\">=</span>dff<span class=\"token punctuation\">[</span><span class=\"token string\">'Longitude'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            mode<span class=\"token operator\">=</span><span class=\"token string\">'markers'</span><span class=\"token punctuation\">,</span>\n            marker<span class=\"token operator\">=</span>go<span class=\"token punctuation\">.</span>Marker<span class=\"token punctuation\">(</span>\n                size<span class=\"token operator\">=</span>dff<span class=\"token punctuation\">[</span><span class=\"token string\">'Magnitude'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> radius_multiplier<span class=\"token punctuation\">[</span><span class=\"token string\">'inner'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                colorscale<span class=\"token operator\">=</span>colorscale_depth<span class=\"token punctuation\">,</span>\n                color<span class=\"token operator\">=</span>dff<span class=\"token punctuation\">[</span><span class=\"token string\">'Depth'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                opacity<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token comment\"># hovering behavior is already handled by outer circles</span>\n            hoverinfo<span class=\"token operator\">=</span><span class=\"token string\">'skip'</span><span class=\"token punctuation\">,</span>\n            showlegend<span class=\"token operator\">=</span><span class=\"token boolean\">False</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    figure <span class=\"token operator\">=</span> go<span class=\"token punctuation\">.</span>Figure<span class=\"token punctuation\">(</span>data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">,</span> layout<span class=\"token operator\">=</span>layout<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> figure</code></pre></div>\n<p>As I said at the beginning, you can create Dash apps without having to write any Javascript or CSS. The problem is that even for a very small app like this one, you will probably want to change the styling, add a small script, or maybe just include Google Analytics.</p>\n<p>For example, in this app I have to display roughly 300-500 earthquakes in a table, and I use a jQuery plugin to have a nice-looking table with pagination and search functionality. I also added Font Awesome, some styling from the Dash Team and a Google font.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">external_js <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\"># jQuery, DataTables, script to initialize DataTables</span>\n    <span class=\"token string\">'https://code.jquery.com/jquery-3.2.1.slim.min.js'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'//cdn.datatables.net/1.10.15/js/jquery.dataTables.min.js'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\"># small hack for DataTables</span>\n    <span class=\"token string\">'https://codepen.io/jackdbd/pen/bROVgV.js'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span>\n\nexternal_css <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\"># dash stylesheet</span>\n    <span class=\"token string\">'https://codepen.io/chriddyp/pen/bWLwgP.css'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://fonts.googleapis.com/css?family=Raleway'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'//maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'//cdn.datatables.net/1.10.15/css/jquery.dataTables.min.css'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> js <span class=\"token keyword\">in</span> external_js<span class=\"token punctuation\">:</span>\n    app<span class=\"token punctuation\">.</span>scripts<span class=\"token punctuation\">.</span>append_script<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'external_url'</span><span class=\"token punctuation\">:</span> js<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> css <span class=\"token keyword\">in</span> external_css<span class=\"token punctuation\">:</span>\n    app<span class=\"token punctuation\">.</span>css<span class=\"token punctuation\">.</span>append_css<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'external_url'</span><span class=\"token punctuation\">:</span> css<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2>Conclusion</h2>\n<p>I had a lot of fun in creating this app, and I’m sure there are many use-cases where a quick (reactive) web app is useful.\nI will keep using Dash for future projects. I also want to <a href=\"https://plot.ly/dash/plugins\">write my own component</a> to practice React.js a bit.</p>\n<p>I’m still a bit skeptic about the idea of creating complex layouts in Python though. Even for a small app like this, the layout seems a bit too cumbersome. Applications with a lot of styling might not be ideal as well.</p>\n<p>That being said, if you want to build something relatively simple in a day or two, I think Dash is great!</p>\n<p>You can find the code for the entire application <a href=\"https://github.com/jackdbd/dash-earthquakes\">on GitHub</a></p>","frontmatter":{"title":"Visualize Earthquakes with Plotly Dash","date":"August 31, 2017"}}},"pageContext":{"slug":"/2017-08-31-visualize-earthquakes-with-plotly-dash/","previous":{"fields":{"slug":"/2017-08-29-a-few-timeless-lessons-from-peopleware/"},"frontmatter":{"title":"A few timeless lessons from Peopleware"}},"next":{"fields":{"slug":"/2017-09-10-a-simple-git-hook-for-your-python-projects/"},"frontmatter":{"title":"A simple git hook for your Python projects"}}}}