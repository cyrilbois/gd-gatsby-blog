{"data":{"site":{"siteMetadata":{"title":"Giacomo Debidda","author":"Giacomo Debidda"}},"markdownRemark":{"id":"ffdc0e94-6cc8-5855-8ba8-e6fdf44e4d71 >>> MarkdownRemark","excerpt":"Let’s continue our journey through the most used design patterns by implementing a  Façade  pattern in Python. Façade is a structural design…","html":"<p>Let’s continue our journey through the most used design patterns by implementing a <em>Façade</em> pattern in Python.</p>\n<h2>Façade is a structural design pattern</h2>\n<p><em>Façade</em> can be used to define a simpler, leaner, higher-level, more consistent interface to expose to a <em>client</em> a specific subset of functionalities provided by one or more subsystems. Tipically these lower-level subsystems are called <em>complex parts</em>. All complex parts controlled by the Façade are often parts of smaller subsystems that are <em>associated</em> one to another.</p>\n<blockquote>\n<p>Façade builds a <em>convenient</em> interface which saves a client the hassle of\ndealing with <em>complex parts</em>.</p>\n</blockquote>\n<p>Note that the client can still have direct access to these functionalities: the Façade does not - and should not - prevent the client from accessing the complex parts.</p>\n<blockquote>\n<p>Subsystem implementation gains <em>flexibility</em>, client gains <em>simplicity</em>.</p>\n</blockquote>\n<p>The <a href=\"http://topepo.github.io/caret/index.html\">caret package in R</a> is a great example of a Façade, because it wraps a collection of APIs into a single well-designed API. The R programming language contains a huge number of packages for implementing almost all statistical models ever created. Unfortunately, more often then not, these packages have their own specific syntax, so when training/testing the model, one must know the syntax for the model being used. Caret implements a set of functions that provide a uniform interface when creating predictive models (e.g. the functions <code class=\"language-text\">train</code> and <code class=\"language-text\">predict</code>), but if you want you can still use the original syntax to train/test a specific model.</p>\n<h2>Façade Pattern in Python</h2>\n<p>To illustrate a Façade pattern I will use a car as an example: you would like to have access to a set of functionalities when using a car (e.g. drive, park, etc), but you probably don’t want to deal with all the complex parts a car is composed of.</p>\n<p>In this example I decided to implement the complex parts as private classes. Since this is python, we can still access these classes without any issue. I just make them private to suggest that the client should call the Façade, not the complex parts directly.</p>\n<p>The Complex parts.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">_IgnitionSystem</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    @<span class=\"token builtin\">staticmethod</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">produce_spark</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">_Engine</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>revs_per_minute <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">turnon</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>revs_per_minute <span class=\"token operator\">=</span> <span class=\"token number\">2000</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">turnoff</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>revs_per_minute <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">_FuelTank</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> level<span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>_level <span class=\"token operator\">=</span> level\n\n    @<span class=\"token builtin\">property</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">level</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>_level\n\n    @level<span class=\"token punctuation\">.</span>setter\n    <span class=\"token keyword\">def</span> <span class=\"token function\">level</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>_level <span class=\"token operator\">=</span> level\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">_DashBoardLight</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> is_on<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>_is_on <span class=\"token operator\">=</span> is_on\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>__class__<span class=\"token punctuation\">.</span>__name__\n\n    @<span class=\"token builtin\">property</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">is_on</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>_is_on\n\n    @is_on<span class=\"token punctuation\">.</span>setter\n    <span class=\"token keyword\">def</span> <span class=\"token function\">is_on</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>_is_on <span class=\"token operator\">=</span> status\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">status_check</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>_is_on<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'{}: ON'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'{}: OFF'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">_HandBrakeLight</span><span class=\"token punctuation\">(</span>_DashBoardLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">_FogLampLight</span><span class=\"token punctuation\">(</span>_DashBoardLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">_Dashboard</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>lights <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'handbreak'</span><span class=\"token punctuation\">:</span> _HandBrakeLight<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'fog'</span><span class=\"token punctuation\">:</span> _FogLampLight<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> light <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>lights<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            light<span class=\"token punctuation\">.</span>status_check<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>The Façade.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Car</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>ignition_system <span class=\"token operator\">=</span> _IgnitionSystem<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>engine <span class=\"token operator\">=</span> _Engine<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>fuel_tank <span class=\"token operator\">=</span> _FuelTank<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>dashboard <span class=\"token operator\">=</span> _Dashboard<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    @<span class=\"token builtin\">property</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">km_per_litre</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">17.0</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">consume_fuel</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> km<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        litres <span class=\"token operator\">=</span> <span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>fuel_tank<span class=\"token punctuation\">.</span>level<span class=\"token punctuation\">,</span> km <span class=\"token operator\">/</span> self<span class=\"token punctuation\">.</span>km_per_litre<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>fuel_tank<span class=\"token punctuation\">.</span>level <span class=\"token operator\">-=</span> litres\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\nStarting...'</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>dashboard<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>ignition_system<span class=\"token punctuation\">.</span>produce_spark<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>engine<span class=\"token punctuation\">.</span>turnon<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Can\\'t start. Faulty ignition system'</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">has_enough_fuel</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> km<span class=\"token punctuation\">,</span> km_per_litre<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        litres_needed <span class=\"token operator\">=</span> km <span class=\"token operator\">/</span> km_per_litre\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>fuel_tank<span class=\"token punctuation\">.</span>level <span class=\"token operator\">></span> litres_needed<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">drive</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> km<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>engine<span class=\"token punctuation\">.</span>revs_per_minute <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">while</span> self<span class=\"token punctuation\">.</span>has_enough_fuel<span class=\"token punctuation\">(</span>km<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>km_per_litre<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                self<span class=\"token punctuation\">.</span>consume_fuel<span class=\"token punctuation\">(</span>km<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Drove {}km'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>km<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'{:.2f}l of fuel still left'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>fuel_tank<span class=\"token punctuation\">.</span>level<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Can\\'t drive. The Engine is turned off!'</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">park</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\nParking...'</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>dashboard<span class=\"token punctuation\">.</span>lights<span class=\"token punctuation\">[</span><span class=\"token string\">'handbreak'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>is_on <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n        self<span class=\"token punctuation\">.</span>dashboard<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>engine<span class=\"token punctuation\">.</span>turnoff<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">switch_fog_lights</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\nSwitching {} fog lights...'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        boolean <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span> <span class=\"token keyword\">if</span> status <span class=\"token operator\">==</span> <span class=\"token string\">'ON'</span> <span class=\"token keyword\">else</span> <span class=\"token boolean\">False</span>\n        self<span class=\"token punctuation\">.</span>dashboard<span class=\"token punctuation\">.</span>lights<span class=\"token punctuation\">[</span><span class=\"token string\">'fog'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>is_on <span class=\"token operator\">=</span> boolean\n        self<span class=\"token punctuation\">.</span>dashboard<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">fill_up_tank</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\nFuel tank filled up!'</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>fuel_tank<span class=\"token punctuation\">.</span>level <span class=\"token operator\">=</span> <span class=\"token number\">100</span></code></pre></div>\n<p>The Client here is simply the main function.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    car <span class=\"token operator\">=</span> Car<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    car<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    car<span class=\"token punctuation\">.</span>drive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    car<span class=\"token punctuation\">.</span>switch_fog_lights<span class=\"token punctuation\">(</span><span class=\"token string\">'ON'</span><span class=\"token punctuation\">)</span>\n    car<span class=\"token punctuation\">.</span>switch_fog_lights<span class=\"token punctuation\">(</span><span class=\"token string\">'OFF'</span><span class=\"token punctuation\">)</span>\n\n    car<span class=\"token punctuation\">.</span>park<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    car<span class=\"token punctuation\">.</span>fill_up_tank<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    car<span class=\"token punctuation\">.</span>drive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    car<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    car<span class=\"token punctuation\">.</span>drive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>You need the code? Grab it <a href=\"https://github.com/jackaljack/design-patterns\">here</a>!</p>","frontmatter":{"title":"Façade pattern in Python","date":"November 26, 2016"}}},"pageContext":{"slug":"/2016-11-26-facade-pattern-in-python/","previous":{"fields":{"slug":"/2016-11-26-adapter-pattern-in-python/"},"frontmatter":{"title":"Adapter pattern in Python"}},"next":{"fields":{"slug":"/2016-12-04-better-git-commits/"},"frontmatter":{"title":"Better Git commits"}}}}