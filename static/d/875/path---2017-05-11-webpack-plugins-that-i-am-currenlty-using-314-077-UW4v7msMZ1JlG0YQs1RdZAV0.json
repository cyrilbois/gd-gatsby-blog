{"data":{"site":{"siteMetadata":{"title":"Giacomo Debidda","author":"Giacomo Debidda"}},"markdownRemark":{"id":"248f362c-35c9-5481-ac77-9865c77c4059 >>> MarkdownRemark","excerpt":"Webpack is probably the most popular module bundler for Javascript applications. Its idea is to have a  single tool  that manages all the…","html":"<p>Webpack is probably the most popular module bundler for Javascript applications. Its idea is to have a <strong>single tool</strong> that manages all the assets: Javascript files, CSS files, Images, etc. Webpack lets you also perform all the necessary tasks for managing and optimizing code dependencies, such as compilation, concatenation, minification, and compression.</p>\n<p>Webpack is based on these 4 key concepts:</p>\n<ol>\n<li>entry</li>\n<li>output</li>\n<li>loaders</li>\n<li>plugins</li>\n</ol>\n<p>The <a href=\"https://webpack.js.org/concepts/\">official documentation</a> does a great job in explaining these concept in a clear, concise way, so I suggest you to check it out. Note that you should install Webpack locally, as they suggest <a href=\"https://webpack.js.org/guides/installation/#global-installation\">here</a>. Other great resources to learn how to use and configure Webpack are the <a href=\"https://www.youtube.com/channel/UCblk3IlXm_ZXkR5OYLuYWaQ/playlists\">Matthew Hsiung’s Webpack playlists on Youtube</a> and <a href=\"https://medium.com/@rajaraodv/webpack-the-confusing-parts-58712f8fcad9\">this article on Medium</a>.</p>\n<p>One of the best features of Webpack is its huge ecosystem of plugins. While loaders can only execute transforms on a per-file basis, plugins add custom functionality and let you perform actions on “compilations” or “chunks” of your bundled modules.</p>\n<p>Here I am going to list all plugins that I am currenly using and include a sample configuration for each one of them.</p>\n<ul>\n<li>clean-webpack-plugin</li>\n<li>copy-webpack-plugin</li>\n<li>extract-text-webpack-plugin</li>\n<li>favicons-webpack-plugin</li>\n<li>html-webpack-plugin</li>\n<li>Other plugins</li>\n</ul>\n<h2>clean-webpack-plugin</h2>\n<p><a href=\"https://github.com/johnagan/clean-webpack-plugin\">This plugin</a> removes your build folder(s) before building. I use it to remove my <strong>dist/</strong> folder.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>plugins&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>[</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;more&nbsp;plugins</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--class syntax--instance syntax--constructor syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--new syntax--js\"><span>new</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--type syntax--instance syntax--js\"><span>CleanWebpackPlugin</span></span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>[</span></span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>dist</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>]</span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>{</span></span><span>&nbsp;root</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>:</span></span><span>&nbsp;</span><span class=\"syntax--support syntax--variable syntax--js\"><span>__dirname</span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;verbose</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>:</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--language syntax--boolean syntax--true syntax--js\"><span>true</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>}</span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>)</span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;more&nbsp;plugins</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>]</span></span></span></div></pre>\n<h2>copy-webpack-plugin</h2>\n<p>Some people consider the <a href=\"https://github.com/kevlened/copy-webpack-plugin\">Copy Webpack Plugin</a> to be an antipattern, because it goes against the main philosophy of Webpack: if your application needs a given asset, you should <code class=\"language-text\">require</code> it where it’s needed, use a file loader to convert it into a module, and let Webpack manage it. I guess they have a point, but at the moment I find it very convenient.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>plugins&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>[</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;more&nbsp;plugins</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--class syntax--instance syntax--constructor syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--new syntax--js\"><span>new</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--type syntax--instance syntax--js\"><span>CopyWebpackPlugin</span></span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>(</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>[</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>{</span></span><span>&nbsp;from</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>:</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--other syntax--object syntax--js\"><span>path</span></span><span class=\"syntax--meta syntax--method-call syntax--js\"><span class=\"syntax--meta syntax--delimiter syntax--method syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--support syntax--function syntax--js\"><span>join</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--support syntax--variable syntax--js\"><span>__dirname</span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>src</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>data</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;to</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>:</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--other syntax--object syntax--js\"><span>path</span></span><span class=\"syntax--meta syntax--method-call syntax--js\"><span class=\"syntax--meta syntax--delimiter syntax--method syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--support syntax--function syntax--js\"><span>join</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--support syntax--variable syntax--js\"><span>__dirname</span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>dist</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>data</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>}</span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>]</span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>{</span></span><span>&nbsp;debug</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>:</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>warning</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>}</span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>)</span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;more&nbsp;plugins</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>]</span></span></span></div></pre>\n<h2>extract-text-webpack-plugin</h2>\n<p>The <a href=\"https://github.com/webpack-contrib/extract-text-webpack-plugin\">Extract Text Plugin</a> takes all files that match the specified regular expressions, and bundle them all into a single file. You can use it to collect all stylesheets required by your application and move them into a single file. This way your stylesheets are no longer inlined into the JS bundle. If your total stylesheet volume is big, it will be faster because the CSS bundle is loaded in parallel to the JS bundle. You will need <code class=\"language-text\">css-loader</code> to use this plugin. If you use Sass, you will need <code class=\"language-text\">sass-loader</code> too. A nice benefit of using this plugin is that it allows you to avoid using the <code class=\"language-text\">style-loader</code>, which has the disadvantage of creating a <code class=\"language-text\">&lt;style&gt;</code> node in the DOM.</p>\n<p>If your app has multiple entry points (e.g. home.js and about.js), this pluging plays well together with the CommonsChunkPlugin, but bear in mind that the configuration will be different from the one I included down here.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>module</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>:</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;rules</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>:</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>[</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;rule&nbsp;for&nbsp;.css&nbsp;files</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;test</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>:</span></span><span class=\"syntax--string syntax--regexp syntax--js\"><span>&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>/</span></span><span class=\"syntax--constant syntax--character syntax--escape syntax--backslash syntax--regexp\"><span>\\.</span></span><span>css</span><span class=\"syntax--keyword syntax--control syntax--anchor syntax--regexp\"><span>$</span></span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>/</span></span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;include</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>:</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--other syntax--object syntax--js\"><span>path</span></span><span class=\"syntax--meta syntax--method-call syntax--js\"><span class=\"syntax--meta syntax--delimiter syntax--method syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--support syntax--function syntax--js\"><span>join</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--support syntax--variable syntax--js\"><span>__dirname</span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>src</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>css</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;use</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>:</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--other syntax--object syntax--js\"><span>ExtractTextPlugin</span></span><span class=\"syntax--meta syntax--method-call syntax--js\"><span class=\"syntax--meta syntax--delimiter syntax--method syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>extract</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>{</span></span><span>&nbsp;fallback</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>:</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>style-loader</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;use</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>:</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>css-loader</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>}</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>}</span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;rule&nbsp;for&nbsp;.sass/.scss&nbsp;files</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;test</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>:</span></span><span class=\"syntax--string syntax--regexp syntax--js\"><span>&nbsp;</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>/</span></span><span class=\"syntax--constant syntax--character syntax--escape syntax--backslash syntax--regexp\"><span>\\.</span></span><span class=\"syntax--meta syntax--group syntax--regexp\"><span class=\"syntax--punctuation syntax--definition syntax--group syntax--regexp\"><span>(</span></span><span>sass</span><span class=\"syntax--keyword syntax--operator syntax--or syntax--regexp\"><span>|</span></span><span>scss</span><span class=\"syntax--punctuation syntax--definition syntax--group syntax--regexp\"><span>)</span></span></span><span class=\"syntax--keyword syntax--control syntax--anchor syntax--regexp\"><span>$</span></span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>/</span></span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;include</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>:</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--other syntax--object syntax--js\"><span>path</span></span><span class=\"syntax--meta syntax--method-call syntax--js\"><span class=\"syntax--meta syntax--delimiter syntax--method syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--support syntax--function syntax--js\"><span>join</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--support syntax--variable syntax--js\"><span>__dirname</span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>src</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>sass</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;use</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>:</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--other syntax--object syntax--js\"><span>ExtractTextPlugin</span></span><span class=\"syntax--meta syntax--method-call syntax--js\"><span class=\"syntax--meta syntax--delimiter syntax--method syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--entity syntax--name syntax--function syntax--js\"><span>extract</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>{</span></span><span>&nbsp;fallback</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>:</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>style-loader</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;use</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>:</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>[</span></span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>css-loader</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>sass-loader</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>]</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>}</span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>}</span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>]</span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>}</span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>plugins&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>[</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;more&nbsp;plugins</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--class syntax--instance syntax--constructor syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--new syntax--js\"><span>new</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--type syntax--instance syntax--js\"><span>ExtractTextPlugin</span></span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>styles.css</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>)</span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;name&nbsp;of&nbsp;the&nbsp;bundle&nbsp;for&nbsp;all&nbsp;extracted&nbsp;files</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;more&nbsp;plugins</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>]</span></span></span></div></pre>\n<h2>favicons-webpack-plugin</h2>\n<p><a href=\"https://github.com/jantimon/favicons-webpack-plugin\">This plugin</a> automatically creates all the favicons you need for your application. Since its basic configuration creates 37 different favicons, optimized for different devices, it takes a while. That’s why it might be a good idea to use this plugin only in production, not in development.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>plugins&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>[</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;more&nbsp;plugins</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--class syntax--instance syntax--constructor syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--new syntax--js\"><span>new</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--type syntax--instance syntax--js\"><span>FaviconsWebpackPlugin</span></span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--variable syntax--other syntax--object syntax--js\"><span>path</span></span><span class=\"syntax--meta syntax--method-call syntax--js\"><span class=\"syntax--meta syntax--delimiter syntax--method syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--support syntax--function syntax--js\"><span>join</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--support syntax--variable syntax--js\"><span>__dirname</span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>src</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>images</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>logo.png</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>)</span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;more&nbsp;plugins</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>]</span></span></span></div></pre>\n<h2>html-webpack-plugin</h2>\n<p><a href=\"https://github.com/jantimon/html-webpack-plugin\">This plugin</a> is a <em>must have</em>. It generates an HTML5 file that includes all your webpack bundles in the body using script tags. This way in your <code class=\"language-text\">index.html</code> file you don’t have to include any <code class=\"language-text\">&lt;link&gt;</code> tag in the <code class=\"language-text\">&lt;head&gt;</code> for your stylesheet bundle, nor you have to include any <code class=\"language-text\">&lt;script&gt;</code> tag in the <code class=\"language-text\">&lt;body&gt;</code> for your javascript bundle.\nYou can either let the plugin generate an HTML file for you, supply your own template using lodash templates or use your own loader if you are using different templates (e.g. handlebars). If you have the appropriate loaders, <a href=\"http://stackoverflow.com/questions/42861651/can-i-use-html-webpack-plugin-with-a-django-base-template\">you can even use Django templates</a> with this plugin.</p>\n<p>If you have multiple entry points, create an instance of this plugin for each one of them.</p>\n<p><em>A small gotcha</em>: if you forget to remove the <code class=\"language-text\">&lt;link&gt;</code> tag or your <code class=\"language-text\">&lt;script&gt;</code> tag in your <code class=\"language-text\">index.html</code> , Webpack <a href=\"http://stackoverflow.com/questions/37081559/all-my-code-runs-twice-when-compiled-by-webpack\">executes twice</a> all the code required by your entry point.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>plugins&nbsp;</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>=</span></span><span>&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>[</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;more&nbsp;plugins</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--class syntax--instance syntax--constructor syntax--js\"><span class=\"syntax--keyword syntax--operator syntax--new syntax--js\"><span>new</span></span><span>&nbsp;</span><span class=\"syntax--entity syntax--name syntax--type syntax--instance syntax--js\"><span>HtmlWebpackPlugin</span></span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;template</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>:</span></span><span>&nbsp;</span><span class=\"syntax--variable syntax--other syntax--object syntax--js\"><span>path</span></span><span class=\"syntax--meta syntax--method-call syntax--js\"><span class=\"syntax--meta syntax--delimiter syntax--method syntax--period syntax--js\"><span>.</span></span><span class=\"syntax--support syntax--function syntax--js\"><span>join</span></span><span class=\"syntax--meta syntax--arguments syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--begin syntax--bracket syntax--round syntax--js\"><span>(</span></span><span class=\"syntax--support syntax--variable syntax--js\"><span>__dirname</span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>src</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>templates</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>index.html</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--punctuation syntax--definition syntax--arguments syntax--end syntax--bracket syntax--round syntax--js\"><span>)</span></span></span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filename</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>:</span></span><span>&nbsp;</span><span class=\"syntax--string syntax--quoted syntax--single syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--string syntax--begin syntax--js\"><span>&#39;</span></span><span>index.html</span><span class=\"syntax--punctuation syntax--definition syntax--string syntax--end syntax--js\"><span>&#39;</span></span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hash</span><span class=\"syntax--keyword syntax--operator syntax--assignment syntax--js\"><span>:</span></span><span>&nbsp;</span><span class=\"syntax--constant syntax--language syntax--boolean syntax--true syntax--js\"><span>true</span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--meta syntax--brace syntax--curly syntax--js\"><span>}</span></span><span class=\"syntax--meta syntax--brace syntax--round syntax--js\"><span>)</span></span><span class=\"syntax--meta syntax--delimiter syntax--object syntax--comma syntax--js\"><span>,</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span>&nbsp;&nbsp;</span><span class=\"syntax--comment syntax--line syntax--double-slash syntax--js\"><span class=\"syntax--punctuation syntax--definition syntax--comment syntax--js\"><span>//</span></span><span>&nbsp;more&nbsp;plugins</span></span></span></div><div class=\"line\"><span class=\"syntax--source syntax--js\"><span class=\"syntax--meta syntax--brace syntax--square syntax--js\"><span>]</span></span></span></div></pre>\n<h2>Other plugins</h2>\n<p>Here are a few plugins that I am not using at the moment, but that I am pretty sure I will use sooner or later.</p>\n<p><strong>CommonsChunkPlugin</strong>\nThe <a href=\"https://webpack.js.org/plugins/commons-chunk-plugin/\">CommonsChunkPlugin</a> is basically an <a href=\"https://github.com/webpack/docs/wiki/optimization\">optimization</a> plugin. It creates a separate file (known as a chunk), consisting of common modules shared between multiple entry points. By separating common modules from bundles, the resulting chunked file can be loaded once initially, and stored in cache for later use. Its configuration requires definitely some effort, but as they say in <a href=\"https://www.youtube.com/watch?v=-xzWMKuiS2o&#x26;list=PLnUE-7Cz5mHERezkTJfh0iU0LESkHmSxA\">these two videos</a>, this plugin is a killer feature of Webpack.</p>\n<p><strong>Dotenv-webpack</strong>\nApps sometimes store config as constants in the code. This is a violation of <a href=\"https://12factor.net/config\">twelve-factor</a>, which requires strict separation of config from code. <a href=\"https://github.com/mrsteele/dotenv-webpack\">This plugin</a> lets you store your configuration in an <code class=\"language-text\">.env</code> file - which you should add to <code class=\"language-text\">.gitignore</code> - so you can easily switch between different environments (e.g. development, test, production).</p>\n<p><strong>HotModuleReplacementPlugin</strong>\nThe HotModuleReplacementPlugin is basically a LiveReload, for every module. As they say in <a href=\"https://github.com/webpack/docs/wiki/hot-module-replacement-with-webpack\">the documentation</a>, this plugin is still an experimental feature.</p>\n<p><strong>Webpack Shell Plugin</strong>\nThe <a href=\"https://github.com/1337programming/webpack-shell-plugin\">Webpack Shell Plugin</a> allows you to run any shell command before or after webpack builds. This will work for both webpack and webpack-dev-server.</p>","frontmatter":{"title":"Webpack plugins that I am currently using","date":"May 11, 2017"}}},"pageContext":{"slug":"/2017-05-11-webpack-plugins-that-i-am-currenlty-using/","previous":{"fields":{"slug":"/2017-04-30-threejs-project-starter-for-es6-and-webpack2/"},"frontmatter":{"title":"Three.js project starter for ES6 and Webpack 2"}},"next":{"fields":{"slug":"/2017-05-12-getting-started-with-webpack-and-es6/"},"frontmatter":{"title":"Getting started with Webpack and ES6"}}}}